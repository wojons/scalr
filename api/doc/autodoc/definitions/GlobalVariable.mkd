# `GlobalVariable` #







## Properties ##

### `name` (required, create-only) ###




Property of type: `string`.




### `value` (optional) ###

The value declared in the current scope for this variable.  null allows inheritance. Any other value overrides inheritance.  This is ignored if `declaredIn` is not the current scope.


Property of type: `string`.




### `validationPattern` (optional) ###

A validation pattern to apply in inner scopes. This is read-only if `declaredIn` is not the current scope.


Property of type: `string`.




### `requiredIn` (optional) ###

The scope where this variable is required. This is read-only if `declaredIn` is not the current scope.


Property of type: `string`.

 
The following are valid values for the `requiredIn` property:
  + `scalr`
  + `account`
  + `environment`
  + `farm`
  + `farmrole`
  + `role`
  + `server`



### `outputFormat` (optional) ###

The formatting to apply when formatting this variable. This is read-only if `declaredIn` is not the current scope.


Property of type: `string`.




### `locked` (optional) ###

Whether this variable is locked in inner scopes. This is read-only if `declaredIn` is not the current scope.


Property of type: `boolean`.




### `hidden` (optional) ###

Whether this variable is hidden in inner scopes. This is read-only if `declaredIn` is not the current scope.


Property of type: `boolean`.




### `description` (optional) ###

A description that explains what this Global Variable is used for.


Property of type: `string`.




### `category` (optional) ###

Category of the variable.


Property of type: `string`.




### `declaredIn` (read-only) ###

Whether this variable is declared in the current scope.


Property of type: `string`.

 
The following are valid values for the `declaredIn` property:
  + `scalr`
  + `account`
  + `environment`
  + `farm`
  + `farmrole`
  + `role`
  + `server`



### `computedValue` (read-only) ###

The value computed by Scalr for this variable.


Property of type: `string`.




### `computedCategory` (read-only) ###

The category computed by Scalr for this variable.


Property of type: `string`.






## Used in ##

  + [`/roles/{roleId}/global-variables/`](./../rest/api/v1beta0/account/roles/{roleId}/global-variables/)
  + [`/roles/{roleId}/global-variables/{globalVariableName}/`](./../rest/api/v1beta0/account/roles/{roleId}/global-variables/{globalVariableName}/)
  + [`/{envId}/farm-roles/{farmRoleId}/global-variables/`](./../rest/api/v1beta0/user/{envId}/farm-roles/{farmRoleId}/global-variables/)
  + [`/{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/`](./../rest/api/v1beta0/user/{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/)
  + [`/{envId}/farms/{farmId}/global-variables/`](./../rest/api/v1beta0/user/{envId}/farms/{farmId}/global-variables/)
  + [`/{envId}/farms/{farmId}/global-variables/{globalVariableName}/`](./../rest/api/v1beta0/user/{envId}/farms/{farmId}/global-variables/{globalVariableName}/)
  + [`/{envId}/roles/{roleId}/global-variables/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/global-variables/)
  + [`/{envId}/roles/{roleId}/global-variables/{globalVariableName}/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/global-variables/{globalVariableName}/)

## Swagger Definition ##

    {
      "properties": {
        "category": {
          "description": "Category of the variable.", 
          "type": "string"
        }, 
        "computedCategory": {
          "description": "The category computed by Scalr for this variable.", 
          "readOnly": true, 
          "type": "string"
        }, 
        "computedValue": {
          "description": "The value computed by Scalr for this variable.", 
          "readOnly": true, 
          "type": "string"
        }, 
        "declaredIn": {
          "description": "Whether this variable is declared in the current scope.", 
          "enum": [
            "scalr", 
            "account", 
            "environment", 
            "farm", 
            "farmrole", 
            "role", 
            "server"
          ], 
          "readOnly": true, 
          "type": "string"
        }, 
        "description": {
          "description": "A description that explains what this Global Variable is used for.", 
          "type": "string"
        }, 
        "hidden": {
          "description": "Whether this variable is hidden in inner scopes. This is read-only if `declaredIn` is not the current scope.", 
          "type": "boolean"
        }, 
        "locked": {
          "description": "Whether this variable is locked in inner scopes. This is read-only if `declaredIn` is not the current scope.", 
          "type": "boolean"
        }, 
        "name": {
          "type": "string"
        }, 
        "outputFormat": {
          "description": "The formatting to apply when formatting this variable. This is read-only if `declaredIn` is not the current scope.", 
          "type": "string"
        }, 
        "requiredIn": {
          "description": "The scope where this variable is required. This is read-only if `declaredIn` is not the current scope.", 
          "enum": [
            "scalr", 
            "account", 
            "environment", 
            "farm", 
            "farmrole", 
            "role", 
            "server"
          ], 
          "type": "string"
        }, 
        "validationPattern": {
          "description": "A validation pattern to apply in inner scopes. This is read-only if `declaredIn` is not the current scope.", 
          "type": "string"
        }, 
        "value": {
          "description": "The value declared in the current scope for this variable.  null allows inheritance. Any other value overrides inheritance.  This is ignored if `declaredIn` is not the current scope.", 
          "type": "string"
        }
      }, 
      "required": [
        "name"
      ], 
      "x-createOnly": [
        "name"
      ], 
      "x-usedIn": [
        "/roles/{roleId}/global-variables/", 
        "/roles/{roleId}/global-variables/{globalVariableName}/", 
        "/{envId}/farm-roles/{farmRoleId}/global-variables/", 
        "/{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/", 
        "/{envId}/farms/{farmId}/global-variables/", 
        "/{envId}/farms/{farmId}/global-variables/{globalVariableName}/", 
        "/{envId}/roles/{roleId}/global-variables/", 
        "/{envId}/roles/{roleId}/global-variables/{globalVariableName}/"
      ]
    }
