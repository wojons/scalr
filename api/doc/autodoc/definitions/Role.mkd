# `Role` #







## Properties ##

### `os` (required, filterable) ###




An object of type [`OsForeignKey`](./../definitions/OsForeignKey.mkd).

To filter on this field, pass the `id` property of the [`OsForeignKey`](./../definitions/OsForeignKey.mkd) object you are referencing,
e.g.: `os=...`.


### `name` (required, filterable) ###




Property of type: `string`.


To filter on this field, use: `name=...`.


### `category` (required, filterable) ###




An object of type [`RoleCategoryForeignKey`](./../definitions/RoleCategoryForeignKey.mkd).

To filter on this field, pass the `id` property of the [`RoleCategoryForeignKey`](./../definitions/RoleCategoryForeignKey.mkd) object you are referencing,
e.g.: `category=...`.


### `useScalrAgent` (create-only, filterable) ###

Using Scalarizr (Scalr agent).


Property of type: `boolean`.


To filter on this field, use: `useScalrAgent=...`.


### `quickStart` (optional, filterable) ###

Whether it is QuickStart Role.


Property of type: `boolean`.


To filter on this field, use: `quickStart=...`.


### `description` (optional) ###




Property of type: `string`.




### `deprecated` (optional, filterable) ###

Whether the Role is deprecated.


Property of type: `boolean`.


To filter on this field, use: `deprecated=...`.


### `builtinAutomation` (create-only, filterable) ###




An array of 
`string` objects.


### `scope` (read-only, filterable) ###




Property of type: `string`.

 
The following are valid values for the `scope` property:
  + `scalr`
  + `account`
  + `environment`
  + `farm`
  + `farmrole`
  + `role`
  + `server`

To filter on this field, use: `scope=...`.


### `id` (read-only, filterable) ###




Property of type: `integer`.


To filter on this field, use: `id=...`.




## Used in ##

  + [`/roles/`](./../rest/api/v1beta0/account/roles/)
  + [`/roles/{roleId}/`](./../rest/api/v1beta0/account/roles/{roleId}/)
  + [`/roles/{roleId}/global-variables/`](./../rest/api/v1beta0/account/roles/{roleId}/global-variables/)
  + [`/roles/{roleId}/global-variables/{globalVariableName}/`](./../rest/api/v1beta0/account/roles/{roleId}/global-variables/{globalVariableName}/)
  + [`/roles/{roleId}/images/`](./../rest/api/v1beta0/account/roles/{roleId}/images/)
  + [`/roles/{roleId}/images/{imageId}/`](./../rest/api/v1beta0/account/roles/{roleId}/images/{imageId}/)
  + [`/roles/{roleId}/images/{imageId}/actions/replace/`](./../rest/api/v1beta0/account/roles/{roleId}/images/{imageId}/actions/replace/)
  + [`/roles/{roleId}/orchestration-rules/`](./../rest/api/v1beta0/account/roles/{roleId}/orchestration-rules/)
  + [`/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/`](./../rest/api/v1beta0/account/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/)
  + [`/{envId}/roles/`](./../rest/api/v1beta0/user/{envId}/roles/)
  + [`/{envId}/roles/{roleId}/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/)
  + [`/{envId}/roles/{roleId}/global-variables/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/global-variables/)
  + [`/{envId}/roles/{roleId}/global-variables/{globalVariableName}/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/global-variables/{globalVariableName}/)
  + [`/{envId}/roles/{roleId}/images/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/images/)
  + [`/{envId}/roles/{roleId}/images/{imageId}/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/images/{imageId}/)
  + [`/{envId}/roles/{roleId}/images/{imageId}/actions/replace/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/images/{imageId}/actions/replace/)
  + [`/{envId}/roles/{roleId}/orchestration-rules/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/orchestration-rules/)
  + [`/{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/`](./../rest/api/v1beta0/user/{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/)

## Swagger Definition ##

    {
      "properties": {
        "builtinAutomation": {
          "items": {
            "enum": [
              "base", 
              "chef", 
              "mysql", 
              "percona", 
              "mariadb", 
              "postgresql", 
              "mongodb", 
              "redis", 
              "apache", 
              "nginx", 
              "tomcat", 
              "haproxy", 
              "rabbitmq", 
              "memcached"
            ], 
            "type": "string"
          }, 
          "type": "array"
        }, 
        "category": {
          "$ref": "#/definitions/RoleCategoryForeignKey"
        }, 
        "deprecated": {
          "description": "Whether the Role is deprecated.", 
          "type": "boolean"
        }, 
        "description": {
          "type": "string"
        }, 
        "id": {
          "readOnly": true, 
          "type": "integer"
        }, 
        "name": {
          "type": "string"
        }, 
        "os": {
          "$ref": "#/definitions/OsForeignKey"
        }, 
        "quickStart": {
          "description": "Whether it is QuickStart Role.", 
          "type": "boolean"
        }, 
        "scope": {
          "enum": [
            "scalr", 
            "account", 
            "environment", 
            "farm", 
            "farmrole", 
            "role", 
            "server"
          ], 
          "readOnly": true, 
          "type": "string"
        }, 
        "useScalrAgent": {
          "description": "Using Scalarizr (Scalr agent).", 
          "type": "boolean"
        }
      }, 
      "required": [
        "category", 
        "name", 
        "os"
      ], 
      "x-createOnly": [
        "builtinAutomation", 
        "useScalrAgent"
      ], 
      "x-filterable": [
        "builtinAutomation", 
        "category", 
        "deprecated", 
        "id", 
        "name", 
        "os", 
        "quickStart", 
        "scope", 
        "useScalrAgent"
      ], 
      "x-usedIn": [
        "/roles/", 
        "/roles/{roleId}/", 
        "/roles/{roleId}/global-variables/", 
        "/roles/{roleId}/global-variables/{globalVariableName}/", 
        "/roles/{roleId}/images/", 
        "/roles/{roleId}/images/{imageId}/", 
        "/roles/{roleId}/images/{imageId}/actions/replace/", 
        "/roles/{roleId}/orchestration-rules/", 
        "/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/", 
        "/{envId}/roles/", 
        "/{envId}/roles/{roleId}/", 
        "/{envId}/roles/{roleId}/global-variables/", 
        "/{envId}/roles/{roleId}/global-variables/{globalVariableName}/", 
        "/{envId}/roles/{roleId}/images/", 
        "/{envId}/roles/{roleId}/images/{imageId}/", 
        "/{envId}/roles/{roleId}/images/{imageId}/actions/replace/", 
        "/{envId}/roles/{roleId}/orchestration-rules/", 
        "/{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/"
      ]
    }
