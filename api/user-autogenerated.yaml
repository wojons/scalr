basePath: /api/v1beta0/user
definitions:
  Action:
    discriminator: actionType
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
    required:
    - actionType
    x-concreteTypes:
    - $ref: '#/definitions/ChefAction'
    - $ref: '#/definitions/ScriptAction'
    - $ref: '#/definitions/UriAction'
  AllEventsTrigger:
    description: Triggers when any Event fires.
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  ApiErrorResponse:
    description: Common envelope.
    properties:
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /{envId}/os/
    - /{envId}/servers/{serverId}/actions/resume/
    - /{envId}/servers/{serverId}/
    - /{envId}/farms/{farmId}/farm-roles/
    - /{envId}/scripts/{scriptId}/
    - /{envId}/projects/{projectId}/
    - /{envId}/images/{imageId}/actions/copy/
    - /{envId}/os/{osId}/
    - /{envId}/roles/{roleId}/
    - /{envId}/scaling-metrics/
    - /{envId}/scaling-metrics/{metricName}/
    - /{envId}/cost-centers/
    - /{envId}/farm-roles/{farmRoleId}/global-variables/
    - /{envId}/role-categories/
    - /{envId}/farm-roles/{farmRoleId}/actions/import-server/
    - /{envId}/roles/{roleId}/images/{imageId}/
    - /{envId}/projects/
    - /{envId}/events/
    - /{envId}/images/
    - /{envId}/cost-centers/{costCenterId}/
    - /{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /{envId}/cloud-credentials/{cloudCredentialsId}/
    - /{envId}/scripts/
    - /{envId}/farm-roles/{farmRoleId}/scaling/
    - /{envId}/farm-roles/{farmRoleId}/servers/
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/farms/{farmId}/
    - /{envId}/roles/{roleId}/images/
    - /{envId}/farm-roles/{farmRoleId}/instance/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /{envId}/cloud-credentials/
    - /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
    - /{envId}/farm-roles/{farmRoleId}/
    - /{envId}/roles/
    - /{envId}/servers/{serverId}/actions/suspend/
    - /{envId}/farms/{farmId}/servers/
    - /{envId}/servers/
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /{envId}/farms/{farmId}/actions/terminate/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
    - /{envId}/events/{eventId}/
    - /{envId}/servers/{serverId}/actions/reboot/
    - /{envId}/servers/{serverId}/actions/terminate/
    - /{envId}/images/{imageId}/
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/roles/{roleId}/global-variables/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /{envId}/farm-roles/{farmRoleId}/placement/
    - /{envId}/farms/{farmId}/actions/launch/
    - /{envId}/role-categories/{roleCategoryId}/
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /{envId}/farms/
    - /{envId}/farms/{farmId}/actions/clone/
  ApiMessage:
    properties:
      code:
        description: A machine-readable representation of the message.
        type: string
      message:
        description: A human-readable representation of the message.
        type: string
  ApiMetaContainer:
    properties:
      sample:
        description: Actual properties TBD.
        type: string
  ApiPagination:
    properties:
      first:
        readOnly: true
        type: string
      last:
        readOnly: true
        type: string
      next:
        readOnly: true
        type: string
      prev:
        readOnly: true
        type: string
  AwsClassicPlacementConfiguration:
    properties:
      availabilityZones:
        description: The list of available zones. If it's empty array - will be distributed
          equally, if availabilityZone property is not present or it's NULL - means
          will be chosen by AWS.
        items:
          type: string
        type: array
      placementConfigurationType:
        enum:
        - AwsClassicPlacementConfiguration
        - AwsVpcPlacementConfiguration
        - OpenStackPlacementConfiguration
        - CloudStackPlacementConfiguration
        - GcePlacementConfiguration
        type: string
      region:
        type: string
    required:
    - placementConfigurationType
    - region
    x-abstractType:
      $ref: '#/definitions/PlacementConfiguration'
    x-discriminator: placementConfigurationType
  AwsCloudCredentials:
    properties:
      accessKey:
        description: Acces key ID.
        type: string
      accountId:
        description: AWS Account ID.
        readOnly: true
        type: string
      accountType:
        default: regular
        description: AWS Account type.
        enum:
        - regular
        - govcloud
        - china
        type: string
      billing:
        $ref: '#/definitions/AwsDetailedBilling'
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      secretKey:
        description: The secret key.
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - accountType
    - accessKey
    - secretKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
    - accountType
  AwsDetailedBilling:
    properties:
      bucket:
        description: Billing bucket name.
        type: string
      cloudLocation:
        description: Billing bucket region.
        type: string
      payerAccount:
        description: Payer AWS account number.
        type: string
  AwsInstanceConfiguration:
    properties:
      ebsOptimized:
        type: boolean
      instanceConfigurationType:
        enum:
        - AwsInstanceConfiguration
        type: string
      instanceType:
        $ref: '#/definitions/CloudInstanceType'
    required:
    - instanceConfigurationType
    - instanceType
    x-abstractType:
      $ref: '#/definitions/InstanceConfiguration'
    x-discriminator: instanceConfigurationType
  AwsVpcPlacementConfiguration:
    properties:
      placementConfigurationType:
        enum:
        - AwsClassicPlacementConfiguration
        - AwsVpcPlacementConfiguration
        - OpenStackPlacementConfiguration
        - CloudStackPlacementConfiguration
        - GcePlacementConfiguration
        type: string
      region:
        type: string
      router:
        $ref: '#/definitions/FarmRoleForeignKey'
      subnets:
        items:
          $ref: '#/definitions/CloudAwsVpcSubnetForeignKey'
        type: array
    required:
    - placementConfigurationType
    - region
    - subnets
    x-abstractType:
      $ref: '#/definitions/PlacementConfiguration'
    x-discriminator: placementConfigurationType
  AzureCloudCredentials:
    properties:
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      subscription:
        description: The Azure Subscription ID.
        type: string
      tenantName:
        description: The Azure Active Directory name.
        type: string
    required:
    - name
    - cloudCredentialsType
    - tenantName
    - subscription
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  BandWidthScalingRule:
    description: It is used in combination with user defined Scaling Metrics.
    properties:
      direction:
        enum:
        - inbound
        - outbound
        type: string
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    - direction
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  BasicScalingRule:
    description: It is used in combination with user defined Scaling Metrics.
    properties:
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    x-abstractType:
      $ref: '#/definitions/ScalingRule'
    x-concreteTypes:
    - $ref: '#/definitions/FreeRamScalingRule'
    - $ref: '#/definitions/UrlResponseTimeScalingRule'
    - $ref: '#/definitions/BandWidthScalingRule'
    - $ref: '#/definitions/SqsQueueSizeScalingRule'
    - $ref: '#/definitions/LoadAveragesScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  ChefAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
    required:
    - actionType
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  CloudAwsVpcForeignKey:
    properties:
      id:
        type: string
      region:
        type: string
    required:
    - id
  CloudAwsVpcSubnetForeignKey:
    properties:
      id:
        type: string
      region:
        type: string
    required:
    - id
  CloudCredentials:
    discriminator: cloudCredentialsType
    properties:
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    x-concreteTypes:
    - $ref: '#/definitions/AwsCloudCredentials'
    - $ref: '#/definitions/OpenstackCloudCredentials'
    - $ref: '#/definitions/GceCloudCredentials'
    - $ref: '#/definitions/CloudstackCloudCredentials'
    - $ref: '#/definitions/RackspaceCloudCredentials'
    - $ref: '#/definitions/AzureCloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
    x-usedIn:
    - /{envId}/cloud-credentials/{cloudCredentialsId}/
    - /{envId}/cloud-credentials/
  CloudCredentialsDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/CloudCredentials'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CloudCredentials'
    x-usedIn:
    - /{envId}/cloud-credentials/{cloudCredentialsId}/
    - /{envId}/cloud-credentials/
  CloudCredentialsSummary:
    properties:
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum: &id001
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    x-createOnly:
    - cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  CloudCredentialsSummaryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CloudCredentialsSummary'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CloudCredentialsSummary'
    x-usedIn:
    - /{envId}/cloud-credentials/
  CloudInstanceType:
    properties:
      id:
        type: string
  CloudLocation:
    properties:
      cloudLocation: &id002
        description: More precise Cloud Location (within a given Cloud Platform) for
          this resource. May be null if this resource does not have a location (and
          is global to the platform). Note that if you'd like to filter on this property,
          you **must** also filter on `cloudPlatform`.
        type: string
      cloudPlatform: &id003
        description: Cloud Platform this resources resides in.
        enum: &id004
        - ec2
        - gce
        - azure
        - cloudstack
        - idcf
        - openstack
        - ocs
        - rackspacenguk
        - rackspacengus
        - hpcloud
        - mirantis
        - vio
        - cisco
        type: string
    required:
    - cloudPlatform
    x-filterable:
    - cloudPlatform
    - cloudLocation
    x-usedIn:
    - /{envId}/images/{imageId}/actions/copy/
  CloudstackCloudCredentials:
    properties:
      apiKey:
        description: The API key.
        type: string
      apiUrl:
        description: 'The URL like: http(s)://<cloudstack_ip>:<cloudstack_port>/client/api.'
        type: string
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider that should be specified for CloudStack based
          clouds.
        enum: &id006
        - cloudstack
        - idcf
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      secretKey:
        description: The secret key.
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - provider
    - apiUrl
    - apiKey
    - secretKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  CostCenter:
    properties:
      billingCode:
        readOnly: true
        type: string
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      name:
        type: string
    required:
    - name
    x-filterable:
    - id
    - name
    - billingCode
    x-usedIn:
    - /{envId}/cost-centers/{costCenterId}/
  CostCenterDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/CostCenter'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-usedIn:
    - /{envId}/cost-centers/{costCenterId}/
  CostCenterForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-references:
      $ref: '#/definitions/CostCenter'
  CostCenterListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CostCenter'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-usedIn:
    - /{envId}/cost-centers/
  DateAndTimeScalingRule:
    description: It defines the number of running instances for the specified time
      frames.
    properties:
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      schedule:
        items:
          $ref: '#/definitions/ScalingRuleTimeFrame'
        type: array
    required:
    - name
    - ruleType
    - schedule
    x-abstractType:
      $ref: '#/definitions/ScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  DeleteSuccessResponse:
    description: Common envelope.
    properties:
      data:
        readOnly: true
        type: string
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /{envId}/scripts/{scriptId}/
    - /{envId}/roles/{roleId}/
    - /{envId}/scaling-metrics/{metricName}/
    - /{envId}/roles/{roleId}/images/{imageId}/
    - /{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /{envId}/cloud-credentials/{cloudCredentialsId}/
    - /{envId}/farms/{farmId}/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
    - /{envId}/farm-roles/{farmRoleId}/
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
    - /{envId}/events/{eventId}/
    - /{envId}/images/{imageId}/
    - /{envId}/role-categories/{roleCategoryId}/
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  Event:
    properties:
      description:
        type: string
      id:
        description: The name of this custom event.
        pattern: '[A-Za-z0-9]+'
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
    required:
    - id
    x-createOnly:
    - id
    x-filterable:
    - id
    - scope
    x-usedIn:
    - /{envId}/events/
    - /{envId}/events/{eventId}/
  EventDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Event'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /{envId}/events/
    - /{envId}/events/{eventId}/
  EventListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Event'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /{envId}/events/
  Farm:
    properties:
      description:
        type: string
      id:
        readOnly: true
        type: integer
      launchOrder:
        enum:
        - simulatenous
        - sequential
        type: string
      name:
        type: string
      owner:
        $ref: '#/definitions/UserForeignKey'
        description: Identifier of the User who owns the Farm.
      project:
        $ref: '#/definitions/ProjectForeignKey'
      teams:
        description: List of the Teams that have access to the Farm.
        items:
          $ref: '#/definitions/TeamForeignKey'
        type: array
      timezone:
        type: string
      vpc:
        $ref: '#/definitions/CloudAwsVpcForeignKey'
    required:
    - name
    - project
    x-filterable:
    - id
    - name
    - vpc
    - project
    - launchOrder
    - owner
    - teams
    - timezone
    x-usedIn:
    - /{envId}/farms/{farmId}/farm-roles/
    - /{envId}/farms/{farmId}/
    - /{envId}/farms/{farmId}/servers/
    - /{envId}/farms/{farmId}/actions/terminate/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/farms/{farmId}/actions/launch/
    - /{envId}/farms/
    - /{envId}/farms/{farmId}/actions/clone/
  FarmDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Farm'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Farm'
    x-usedIn:
    - /{envId}/farms/{farmId}/
    - /{envId}/farms/{farmId}/actions/terminate/
    - /{envId}/farms/{farmId}/actions/launch/
    - /{envId}/farms/
    - /{envId}/farms/{farmId}/actions/clone/
  FarmForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Farm'
    x-references:
      $ref: '#/definitions/Farm'
  FarmListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Farm'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Farm'
    x-usedIn:
    - /{envId}/farms/
  FarmRole:
    properties:
      alias:
        description: The Alias for this Farm Role. If this isn't provided, it will
          default to the Role's name (possibly with '-n' appended if the Role name
          is already taken)
        type: string
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Farm this Farm Role should be added to.
        readOnly: true
      id:
        readOnly: true
        type: integer
      instance:
        $ref: '#/definitions/InstanceConfiguration'
      placement:
        $ref: '#/definitions/PlacementConfiguration'
      platform:
        description: Farm Role platform.
        type: string
      role:
        $ref: '#/definitions/RoleForeignKey'
      scaling:
        $ref: '#/definitions/ScalingConfiguration'
    required:
    - role
    - platform
    - placement
    - instance
    - alias
    x-filterable:
    - id
    - farm
    - role
    - platform
    x-usedIn:
    - /{envId}/farms/{farmId}/farm-roles/
    - /{envId}/farm-roles/{farmRoleId}/global-variables/
    - /{envId}/farm-roles/{farmRoleId}/actions/import-server/
    - /{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /{envId}/farm-roles/{farmRoleId}/scaling/
    - /{envId}/farm-roles/{farmRoleId}/servers/
    - /{envId}/farm-roles/{farmRoleId}/instance/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
    - /{envId}/farm-roles/{farmRoleId}/
    - /{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /{envId}/farm-roles/{farmRoleId}/placement/
  FarmRoleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/FarmRole'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/FarmRole'
    x-usedIn:
    - /{envId}/farms/{farmId}/farm-roles/
    - /{envId}/farm-roles/{farmRoleId}/
  FarmRoleForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/FarmRole'
    x-references:
      $ref: '#/definitions/FarmRole'
  FarmRoleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/FarmRole'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/FarmRole'
    x-usedIn:
    - /{envId}/farms/{farmId}/farm-roles/
  FarmTarget:
    description: Selects all Servers of the triggering Server's Farm
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  FreeRamScalingRule:
    description: It is used in combination with user defined Scaling Metrics.
    properties:
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
      useCachedRam:
        descripiton: Whether it should use cached RAM in addition to free RAM as scaling
          metric.
        type: boolean
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  GceCloudCredentials:
    properties:
      accountName:
        description: The service account name.
        type: string
      clientId:
        description: GCE client ID.
        type: string
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      privateKey:
        description: Private key with boundary.
        format: byte
        type: string
      projectId:
        description: GCE project ID.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - projectId
    - clientId
    - accountName
    - privateKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  GlobalVariable:
    properties:
      category:
        description: Category of the variable.
        type: string
      computedCategory:
        description: The category computed by Scalr for this variable.
        readOnly: true
        type: string
      computedValue:
        description: The value computed by Scalr for this variable.
        readOnly: true
        type: string
      declaredIn:
        description: Whether this variable is declared in the current scope.
        enum: *id001
        readOnly: true
        type: string
      description:
        description: A description that explains what this Global Variable is used
          for.
        type: string
      hidden:
        description: Whether this variable is hidden in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: boolean
      locked:
        description: Whether this variable is locked in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: boolean
      name:
        type: string
      outputFormat:
        description: The formatting to apply when formatting this variable. This is
          read-only if `declaredIn` is not the current scope.
        type: string
      requiredIn:
        description: The scope where this variable is required. This is read-only
          if `declaredIn` is not the current scope.
        enum: *id001
        type: string
      validationPattern:
        description: A validation pattern to apply in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: string
      value:
        description: The value declared in the current scope for this variable.  null
          allows inheritance. Any other value overrides inheritance.  This is ignored
          if `declaredIn` is not the current scope.
        type: string
    required:
    - name
    x-createOnly:
    - name
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/global-variables/
    - /{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/roles/{roleId}/global-variables/
  GlobalVariableDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/GlobalVariable'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/global-variables/
    - /{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/roles/{roleId}/global-variables/
  GlobalVariableListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/GlobalVariable'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/global-variables/
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/roles/{roleId}/global-variables/
  Image:
    properties:
      added:
        description: Date and time when this Image was created.
        format: date-time
        readOnly: true
        type: string
      architecture:
        enum: &id005
        - i386
        - x86_64
        type: string
      cloudImageId:
        type: string
      cloudInitInstalled:
        description: Install scalarizr via cloud-init at instance launch.
        type: boolean
      cloudLocation: *id002
      cloudPlatform: *id003
      deprecated:
        description: Whether this Image is deprecated.
        readOnly: true
        type: boolean
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      lastUsed:
        description: Date and time when this Image was last used.
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      scalrAgentInstalled:
        description: Scalarizer is installed.
        type: boolean
      scope:
        enum: *id001
        readOnly: true
        type: string
      size:
        readOnly: true
        type: integer
      source:
        description: Indicates how this Image was created.
        enum:
        - Manual
        - BundleTask
        readOnly: true
        type: string
      status:
        description: Current status for this Image. That `failed` means deletion failed.
        enum:
        - active
        - pending_delete
        - failed
        readOnly: true
        type: string
      statusError:
        description: If the Image is in a failed state, this indicates why.
        readOnly: true
        type: string
      type:
        description: (Only used on EC2 currently) Whether this Image is HVM or EBS.
        readOnly: true
        type: string
    required:
    - name
    - cloudPlatform
    - cloudImageId
    - architecture
    - os
    x-createOnly:
    - scalrAgentInstalled
    - cloudInitInstalled
    x-filterable:
    - id
    - name
    - scope
    - cloudPlatform
    - cloudLocation
    - cloudImageId
    - architecture
    - source
    - status
    - deprecated
    - os
    - scalrAgentInstalled
    - cloudInitInstalled
    x-usedIn:
    - /{envId}/images/{imageId}/actions/copy/
    - /{envId}/roles/{roleId}/images/{imageId}/
    - /{envId}/images/
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /{envId}/images/{imageId}/
  ImageDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Image'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /{envId}/images/{imageId}/actions/copy/
    - /{envId}/roles/{roleId}/images/{imageId}/
    - /{envId}/images/
    - /{envId}/images/{imageId}/
  ImageForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Image'
    x-references:
      $ref: '#/definitions/Image'
  ImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Image'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /{envId}/images/
  InstanceConfiguration:
    discriminator: instanceConfigurationType
    properties:
      instanceConfigurationType:
        enum:
        - AwsInstanceConfiguration
        type: string
      instanceType:
        $ref: '#/definitions/CloudInstanceType'
    required:
    - instanceConfigurationType
    - instanceType
    x-concreteTypes:
    - $ref: '#/definitions/AwsInstanceConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/instance/
  InstanceConfigurationDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/InstanceConfiguration'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/InstanceConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/instance/
  LoadAveragesScalingRule:
    description: It is used in combination with user defined Scaling Metrics.
    properties:
      calculatingPeriod:
        description: Period in minutes which is used to aggregate the Metric Value.
        type: integer
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    - calculatingPeriod
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  NullTarget:
    description: Selects no Server at all.
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  OpenstackCloudCredentials:
    properties:
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      domainName:
        description: Domain name. It must be provided for the Identity API v3.
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      keystoneUrl:
        description: Keystone URL.
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      password:
        description: The password for the user.
        type: string
      provider:
        description: Cloud provider that should be specified for OpenStack based clouds.
        enum: &id007
        - openstack
        - ocs
        - hpcloud
        - mirantis
        - vio
        - cisco
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      sslVerification:
        description: Specifies whether it should verify SSL Certificate.
        type: boolean
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      tenantName:
        description: The tenant name.
        type: string
      userName:
        description: The user name.
        type: string
    required:
    - name
    - cloudCredentialsType
    - provider
    - keystoneUrl
    - userName
    - password
    - tenantName
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  OrchestrationRule:
    properties:
      action:
        $ref: '#/definitions/Action'
      blocking:
        description: Should this Orchestration Rule's execution delay the execution
          of further Orchestration Rules and triggering of further Events? Defaults
          to the action's default when null.
        type: boolean
      id:
        readOnly: true
        type: integer
      order:
        description: When should this Orchestration Rule execute relative to other
          Orchestration Rules that use the same triggeringEvent? Default is relative
          to existing Rules.
        type: integer
      runAs:
        descrition: User the Orchestration Rule should execute as. Defaults to root
          / Administrator when null.
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
      target:
        $ref: '#/definitions/Target'
      timeout:
        description: How long should Scalr wait before aborting the execution of this
          Orchestration Rule? Defaults to the action's default when null.
        type: integer
      trigger:
        $ref: '#/definitions/Trigger'
    required:
    - trigger
    - action
    - target
    x-filterable:
    - id
    - blocking
    - order
    - runAs
    x-usedIn:
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  OrchestrationRuleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/OrchestrationRule'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  OrchestrationRuleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/OrchestrationRule'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/farm-roles/{farmRoleId}/orchestration-rules/
  Os:
    properties:
      family:
        enum:
        - oel
        - debian
        - ubuntu
        - rhel
        - redhat
        - centos
        - amazon
        - windows
        type: string
      generation:
        type: string
      id:
        description: An ID uniquely identifying this OS in Scalr.
        pattern: '[A-Za-z0-9-]+'
        type: string
      name:
        description: A human-readable name for this OS.
        type: string
      version:
        type: string
    required:
    - id
    - name
    - family
    - generation
    - version
    x-filterable:
    - id
    - name
    - family
    - generation
    x-usedIn:
    - /{envId}/os/{osId}/
  OsDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Os'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /{envId}/os/{osId}/
  OsForeignKey:
    properties:
      id:
        description: An ID uniquely identifying this OS in Scalr.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Os'
    x-references:
      $ref: '#/definitions/Os'
  OsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Os'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /{envId}/os/
  PlacementConfiguration:
    discriminator: placementConfigurationType
    properties:
      placementConfigurationType:
        enum:
        - AwsClassicPlacementConfiguration
        - AwsVpcPlacementConfiguration
        - OpenStackPlacementConfiguration
        - CloudStackPlacementConfiguration
        - GcePlacementConfiguration
        type: string
      region:
        type: string
    required:
    - placementConfigurationType
    - region
    x-concreteTypes:
    - $ref: '#/definitions/AwsVpcPlacementConfiguration'
    - $ref: '#/definitions/AwsClassicPlacementConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/placement/
  PlacementConfigurationDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/PlacementConfiguration'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/PlacementConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/placement/
  Project:
    properties:
      billingCode:
        type: string
      costCenter:
        $ref: '#/definitions/CostCenterForeignKey'
      description:
        type: string
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      leadEmail:
        type: string
      name:
        type: string
    required:
    - costCenter
    - billingCode
    - leadEmail
    - name
    x-createOnly:
    - costCenter
    - billingCode
    - leadEmail
    x-filterable:
    - id
    - name
    - costCenter
    - billingCode
    x-usedIn:
    - /{envId}/projects/{projectId}/
    - /{envId}/projects/
  ProjectDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Project'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Project'
    x-usedIn:
    - /{envId}/projects/{projectId}/
    - /{envId}/projects/
  ProjectForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Project'
    x-references:
      $ref: '#/definitions/Project'
  ProjectListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Project'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Project'
    x-usedIn:
    - /{envId}/projects/
  RackspaceCloudCredentials:
    properties:
      apiKey:
        description: The API access key.
        type: string
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      isUk:
        description: Indicates is Rackspace UK.
        type: boolean
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      userName:
        description: The user name.
        type: string
    required:
    - name
    - cloudCredentialsType
    - userName
    - apiKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - isUk
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  Role:
    properties:
      builtinAutomation:
        items:
          enum:
          - base
          - chef
          - mysql
          - percona
          - mariadb
          - postgresql
          - mongodb
          - redis
          - apache
          - nginx
          - tomcat
          - haproxy
          - rabbitmq
          - memcached
          type: string
        type: array
      category:
        $ref: '#/definitions/RoleCategoryForeignKey'
      deprecated:
        description: Whether the Role is deprecated.
        type: boolean
      description:
        type: string
      id:
        readOnly: true
        type: integer
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      quickStart:
        description: Whether it is QuickStart Role.
        type: boolean
      scope:
        enum: *id001
        readOnly: true
        type: string
      useScalrAgent:
        description: Using Scalarizr (Scalr agent).
        type: boolean
    required:
    - name
    - category
    - os
    x-createOnly:
    - useScalrAgent
    - builtinAutomation
    x-filterable:
    - id
    - name
    - os
    - category
    - scope
    - quickStart
    - deprecated
    - useScalrAgent
    - builtinAutomation
    x-usedIn:
    - /{envId}/roles/{roleId}/
    - /{envId}/roles/{roleId}/images/{imageId}/
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/roles/{roleId}/images/
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /{envId}/roles/
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /{envId}/roles/{roleId}/global-variables/
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  RoleCategory:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
    required:
    - name
    x-filterable:
    - id
    - name
    - scope
    x-usedIn:
    - /{envId}/role-categories/
    - /{envId}/role-categories/{roleCategoryId}/
  RoleCategoryDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/RoleCategory'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /{envId}/role-categories/
    - /{envId}/role-categories/{roleCategoryId}/
  RoleCategoryForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-references:
      $ref: '#/definitions/RoleCategory'
  RoleCategoryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleCategory'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /{envId}/role-categories/
  RoleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Role'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /{envId}/roles/{roleId}/
    - /{envId}/roles/
  RoleForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Role'
    x-references:
      $ref: '#/definitions/Role'
  RoleImage:
    description: A Representation of a Role Image. Note that the `role` property is
      optional when POST-ing to a URL that already includes `{roleId}`.
    properties:
      image:
        $ref: '#/definitions/ImageForeignKey'
      role:
        $ref: '#/definitions/RoleForeignKey'
    required:
    - role
    - image
    x-filterable:
    - role
    - image
    x-usedIn:
    - /{envId}/roles/{roleId}/images/
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
  RoleImageDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/RoleImage'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /{envId}/roles/{roleId}/images/
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
  RoleImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleImage'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /{envId}/roles/{roleId}/images/
  RoleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Role'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /{envId}/roles/
  ScalingConfiguration:
    properties:
      enabled:
        type: boolean
      maxInstances:
        type: integer
      minInstances:
        type: integer
      rules:
        items:
          description: The list of the Scaling Metric's names.
          type: string
        readOnly: true
        type: array
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/scaling/
  ScalingConfigurationDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScalingConfiguration'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/scaling/
  ScalingMetric:
    properties:
      filePath:
        descritpion: Path to the File
        type: string
      function:
        description: Aggregate function to use when executing decision logic.
        enum:
        - average
        - sum
        - min
        - max
        type: string
      inverted:
        description: Whether this metric uses inverted logic. In case of the inversion
          it scales up when the value goes under instead of scaling down.
        type: boolean
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      retrieveMethod:
        description: The operation on the File that should be performed to obtain
          the value of the Metric.
        enum:
        - read
        - execute
        - url-request
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
    required:
    - name
    - retrieveMethod
    - filePath
    - function
    x-filterable:
    - name
    - retrieveMethod
    - function
    - inverted
    - scope
    x-usedIn:
    - /{envId}/scaling-metrics/
    - /{envId}/scaling-metrics/{metricName}/
  ScalingMetricDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScalingMetric'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingMetric'
    x-usedIn:
    - /{envId}/scaling-metrics/
    - /{envId}/scaling-metrics/{metricName}/
  ScalingMetricForeignKey:
    properties:
      name:
        descritpion: The name of the Scaling Metric.
        type: string
    required:
    - name
    x-filterable:
    - name
  ScalingMetricListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ScalingMetric'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingMetric'
    x-usedIn:
    - /{envId}/scaling-metrics/
  ScalingRule:
    discriminator: ruleType
    properties:
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
    required:
    - name
    - ruleType
    x-concreteTypes:
    - $ref: '#/definitions/BasicScalingRule'
    - $ref: '#/definitions/DateAndTimeScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-filterable:
    - name
    - ruleType
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/scaling/
    - /{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
  ScalingRuleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScalingRule'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingRule'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
  ScalingRuleThresholds:
    properties:
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
    required:
    - scaleUp
    - scaleDown
  ScalingRuleTimeFrame:
    properties:
      daysOfWeek:
        description: The days of week which the rule is applied on.
        items:
          enum:
          - sun
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          type: string
        type: array
      end:
        description: End of the frame.
        format: date-time
        type: string
      instanceCount:
        description: The number of the instances which should be running.
        type: integer
      start:
        description: Start time.
        format: date-time
        type: string
    required:
    - instanceCount
    - start
    - end
    - daysOfWeek
  Script:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      blockingDefault:
        type: boolean
      description:
        type: string
      id:
        readOnly: true
        type: integer
      lastChanged:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      osType:
        description: Type of OS this Script should execute on. This will influence
          Orchestration Rules, an will trigger validation on individual ScriptVersion's
          you upload.
        enum:
        - linux
        - windows
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
      timeoutDefault:
        type: integer
    required:
    - name
    - osType
    x-createOnly:
    - osType
    x-filterable:
    - id
    - name
    - osType
    - blockingDefault
    - scope
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /{envId}/scripts/{scriptId}/
    - /{envId}/scripts/
    - /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
      scriptVersion:
        $ref: '#/definitions/ScriptVersionForeignKey'
        description: ScriptVersion to execute.
    required:
    - actionType
    - scriptVersion
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  ScriptDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Script'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /{envId}/scripts/{scriptId}/
    - /{envId}/scripts/
  ScriptForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Script'
    x-references:
      $ref: '#/definitions/Script'
  ScriptListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Script'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /{envId}/scripts/
  ScriptVersion:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      body:
        description: The contents of this ScriptVersion, those will be validated as
          per the Script's OS Type.
        type: string
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of.
      version:
        description: The Script version number. NULL is interpreted as the Latest
          Version.
        readOnly: true
        type: integer
    required:
    - script
    - body
    x-createOnly:
    - script
    x-filterable:
    - script
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScriptVersion'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionForeignKey:
    properties:
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of.
      version:
        description: The Script version number. NULL is interpreted as the Latest
          Version.
        readOnly: true
        type: integer
    required:
    - script
    x-createOnly:
    - script
    x-filterable:
    - script
  ScriptVersionListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ScriptVersion'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
  SelectedFarmRolesTarget:
    description: Selects all Servers with specified Roles.
    properties:
      roles:
        items:
          $ref: '#/definitions/FarmRoleForeignKey'
        type: array
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  ServerSummary:
    description: JSON Representation of the Scalr Server.
    properties:
      cloudLocation:
        description: More precise Cloud Location (within a given Cloud Platform) for
          this resource. May be null if this resource does not have a location (and
          is global to the platform). Note that if you'd like to filter on this property,
          you **must** also filter on `cloudPlatform`.
        readOnly: true
        type: string
      cloudPlatform:
        description: Cloud Platform this resources resides in.
        enum: *id004
        readOnly: true
        type: string
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Identifier of the Farm
        readOnly: true
      farmRole:
        $ref: '#/definitions/FarmRoleForeignKey'
        description: Identifier of the Farm Role
        readOnly: true
      hostname:
        description: The hostname of this Server.
        readOnly: true
        type: string
      id:
        description: Identifier of the Scalr Server.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      index:
        description: The index of the Server in the Farm Role.
        readOnly: true
        type: integer
      launchReason:
        description: The reason the Server was launched.
        readOnly: true
        type: string
      launched:
        description: The date and time the Server was launched.
        format: date-time
        readOnly: true
        type: string
      launchedBy:
        $ref: '#/definitions/UserForeignKey'
        description: The identifier of the User who launched the Server.
        readOnly: true
      privateIp:
        description: IP address of the private network interface of the Server.
        items:
          type: string
        readOnly: true
        type: array
      publicIp:
        description: IP address of the public network interface of the Server.
        items:
          type: string
        readOnly: true
        type: array
      status:
        description: Server status.
        enum:
        - temporary
        - running
        - pending
        - pending_launch
        - initializing
        - importing
        - terminated
        - pending_terminate
        - pending_suspend
        - suspended
        - resuming
        readOnly: true
        type: string
      type:
        description: The type of the instance.
        readOnly: true
        type: string
    x-filterable:
    - index
    - publicIp
    - privateIp
    - id
    - status
    - cloudPlatform
    - cloudLocation
    - hostname
    - launchReason
    - launchedBy
    - farmRole
    - farm
    - type
  ServerSummaryDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ServerSummary'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ServerSummary'
    x-usedIn:
    - /{envId}/servers/{serverId}/actions/resume/
    - /{envId}/servers/{serverId}/
    - /{envId}/farm-roles/{farmRoleId}/actions/import-server/
    - /{envId}/servers/{serverId}/actions/suspend/
    - /{envId}/servers/{serverId}/actions/reboot/
    - /{envId}/servers/{serverId}/actions/terminate/
  ServerSummaryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ServerSummary'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ServerSummary'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/servers/
    - /{envId}/farms/{farmId}/servers/
    - /{envId}/servers/
  SpecificEventTrigger:
    description: Triggers when a specific Event fires.
    properties:
      event:
        $ref: '#/definitions/Event'
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  SqsQueueSizeScalingRule:
    description: It is used in combination with user defined Scaling Metrics.
    properties:
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      queue:
        description: The AWS SQS queue name.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    - queue
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  Tag:
    description: JSON Representation of the Tag.
    properties:
      key:
        description: The Tag key.
        type: string
      value:
        description: The Tag value.
        type: string
    required:
    - key
  Target:
    discriminator: targetType
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-concreteTypes:
    - $ref: '#/definitions/FarmTarget'
    - $ref: '#/definitions/TriggeringFarmRoleTarget'
    - $ref: '#/definitions/SelectedFarmRolesTarget'
    - $ref: '#/definitions/NullTarget'
    - $ref: '#/definitions/TriggeringServerTarget'
  TeamForeignKey:
    properties:
      id:
        description: Identifier of the Team.
        type: integer
    required:
    - id
  Trigger:
    discriminator: triggerType
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-concreteTypes:
    - $ref: '#/definitions/AllEventsTrigger'
    - $ref: '#/definitions/SpecificEventTrigger'
  TriggeringFarmRoleTarget:
    description: Selects all Servers of the triggering Server's Farm Role.
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  TriggeringServerTarget:
    description: Selects the Server that triggered the Event.
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  UriAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
      path:
        description: Path or URL to the script to execute.
        type: string
    required:
    - actionType
    - path
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  UrlResponseTimeScalingRule:
    description: It is used in combination with user defined Scaling Metrics.
    properties:
      name:
        descritpion: The name of the Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
      url:
        desctiption: URL to check
        type: string
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    - url
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  UserForeignKey:
    properties:
      id:
        description: Identifier of the User.
        type: integer
    required:
    - id
info:
  description: Manage Roles, Images, Farms, Farm Roles, and Servers.
  title: Scalr User API
  version: 1.0.0
paths:
  /{envId}/cloud-credentials/:
    get:
      description: Describes all Cloud Credentials available in the Environment.
      responses:
        200:
          description: A list of CloudCredentialsSummary objects.
          schema:
            $ref: '#/definitions/CloudCredentialsSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Creates a new Cloud Credentials in the Environment.
      parameters:
      - description: The JSON representation of a CloudCredentials object.
        in: body
        name: cloudCredentialsObject
        required: true
        schema:
          $ref: '#/definitions/CloudCredentials'
      responses:
        201:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/cloud-credentials/{cloudCredentialsId}/:
    delete:
      description: Deletes the specified Cloud Credentials from the Environment.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Gets detailed information about specified Cloud Credentials. You
        can only obtain information about Cloud Credentials from the Environment scope.
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a CloudCredentials object.
      in: path
      maxLength: 12
      minLength: 12
      name: cloudCredentialsId
      pattern: '[A-Fa-f0-9]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/CloudCredentials'
    patch:
      description: Modifies Cloud Credentials attributes.
      parameters:
      - description: The JSON representation of a CloudCredentials object.
        in: body
        name: cloudCredentialsObject
        required: true
        schema:
          $ref: '#/definitions/CloudCredentials'
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/cost-centers/:
    get:
      description: Describes Cost Centers available in the Environment.
      responses:
        200:
          description: A list of CostCenter objects.
          schema:
            $ref: '#/definitions/CostCenterListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/cost-centers/{costCenterId}/:
    get:
      description: Describes detailed information about a specified Cost Center.
      responses:
        200:
          description: The JSON representation of a CostCenter object.
          schema:
            $ref: '#/definitions/CostCenterDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a CostCenter object.
      in: path
      maxLength: 36
      minLength: 36
      name: costCenterId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/CostCenter'
  /{envId}/events/:
    get:
      description: Describes all Events available in the Environment.
      responses:
        200:
          description: A list of Event objects.
          schema:
            $ref: '#/definitions/EventListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Creates a new Custom Event in the Environment.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        201:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/events/{eventId}/:
    delete:
      description: Deletes the Event from the Environment.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about an Event.
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Event object.
      in: path
      name: eventId
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Event'
    patch:
      description: Modifies Event attributes.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/:
    delete:
      description: Removes the specified Farm Role.
      responses:
        200:
          description: Farm Role deleted.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about a specified Farm Role.
      responses:
        200:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      description: Modifies Farm Role attributes.
      parameters:
      - description: The JSON representation of a FarmRole object.
        in: body
        name: farmRoleObject
        required: true
        schema:
          $ref: '#/definitions/FarmRole'
      responses:
        200:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/actions/import-server/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    post:
      description: Imports the specified server from the cloud to Scalr Farm Role.
      parameters:
      - description: Import Server request data.
        in: body
        name: importServerRequest
        required: true
        schema:
          properties:
            cloudServerId:
              description: Identifier of the instance on the cloud to import.
              type: string
            tags:
              description: The list of the tags which should be applied to the server
                on the Cloud.
              items:
                $ref: '#/definitions/Tag'
              type: array
          required:
          - cloudServerId
        type: object
      responses:
        201:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/global-variables/:
    get:
      description: Describes Global Variables associated with this Farm role.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    post:
      description: Declares a new Global Variable for this Farm role.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/:
    delete:
      description: Deletes a Global Variable from this Farm role's scope.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves a Global Variable's value in this Farm role's scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Updates a Global Variable's value in this Farm role's scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/instance/:
    get:
      description: Describes the Instance configuration of the Farm Role.
      responses:
        200:
          description: The JSON representation of a InstanceConfiguration object.
          schema:
            $ref: '#/definitions/InstanceConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      description: Modifies the Instance configuration of the Farm Role.
      parameters:
      - description: The JSON representation of a InstanceConfiguration object.
        in: body
        name: instanceConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/InstanceConfiguration'
      responses:
        200:
          description: The JSON representation of a InstanceConfiguration object.
          schema:
            $ref: '#/definitions/InstanceConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/orchestration-rules/:
    get:
      description: Describes all Orchestration Rules associated with this Farm Role,
        including Rules from other Scopes (those are read-only).
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    post:
      description: Associates a new Orchestration Rule with this Farm Role.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Deletes an Orchestration Rule associated with this Farm Role.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves an Orchestration Rule.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    - description: The ID of a OrchestrationRule object.
      in: path
      name: orchestrationRuleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Updates an Orchestration rule.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/placement/:
    get:
      description: Describes the Placement configuration of the Farm Role.
      responses:
        200:
          description: The JSON representation of a PlacementConfiguration object.
          schema:
            $ref: '#/definitions/PlacementConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      description: Modifies the Placement configuration of the Farm Role.
      parameters:
      - description: The JSON representation of a PlacementConfiguration object.
        in: body
        name: placementConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/PlacementConfiguration'
      responses:
        200:
          description: The JSON representation of a PlacementConfiguration object.
          schema:
            $ref: '#/definitions/PlacementConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/scaling/:
    get:
      description: Describes the Scaling configuration of the Farm Role.
      responses:
        200:
          description: The JSON representation of a ScalingConfiguration object.
          schema:
            $ref: '#/definitions/ScalingConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      description: Modifies the Scaling configuration of the Farm Role.
      parameters:
      - description: The JSON representation of a ScalingConfiguration object.
        in: body
        name: scalingConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/ScalingConfiguration'
      responses:
        200:
          description: The JSON representation of a ScalingConfiguration object.
          schema:
            $ref: '#/definitions/ScalingConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Adds a new Scaling Rule to the Farm Role.
      parameters:
      - description: The JSON representation of a ScalingRule object.
        in: body
        name: scalingRuleObject
        required: true
        schema:
          $ref: '#/definitions/ScalingRule'
      responses:
        201:
          description: The JSON representation of a ScalingConfiguration object.
          schema:
            $ref: '#/definitions/ScalingConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/:
    delete:
      description: Deletes the Scaling rules from the Farm Role.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes the Scaling rules of the Farm Role.
      responses:
        200:
          description: The JSON representation of a ScalingRule object.
          schema:
            $ref: '#/definitions/ScalingRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    - description: The name of the Scaling Metric.
      in: path
      minLength: 5
      name: metricName
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
    patch:
      description: Modifies the Scaling rules of the Farm Role.
      parameters:
      - description: The JSON representation of a ScalingRule object.
        in: body
        name: scalingRuleObject
        required: true
        schema:
          $ref: '#/definitions/ScalingRule'
      responses:
        200:
          description: The JSON representation of a ScalingRule object.
          schema:
            $ref: '#/definitions/ScalingRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/servers/:
    get:
      description: Describes all Servers which correspond to the Farm Role.
      responses:
        200:
          description: A list of ServerSummary objects.
          schema:
            $ref: '#/definitions/ServerSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
  /{envId}/farms/:
    get:
      description: Describes all Farms available in the Environment.
      responses:
        200:
          description: A list of Farm objects.
          schema:
            $ref: '#/definitions/FarmListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Creates a new Farm in the Environment.
      parameters:
      - description: The JSON representation of a Farm object.
        in: body
        name: farmObject
        required: true
        schema:
          $ref: '#/definitions/Farm'
      responses:
        201:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/:
    delete:
      description: Deletes the Farm from the Environment.
      responses:
        200:
          description: Farm deleted.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about a specified Farm.
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    patch:
      description: Modifies Farm attributes.
      parameters:
      - description: The JSON representation of a Farm object.
        in: body
        name: farmObject
        required: true
        schema:
          $ref: '#/definitions/Farm'
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/clone/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Clones specified Farm.
      parameters:
      - description: Clone Farm options.
        in: body
        name: cloneFarmRequest
        required: true
        schema:
          properties:
            name:
              description: The name of a new Farm.
              type: string
          required:
          - name
        type: object
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/launch/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Appoints farm launch.
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/terminate/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Appoints farm termination.
      parameters:
      - description: Terminate Farm options.
        in: body
        name: terminateFarmRequest
        required: false
        schema:
          properties:
            force:
              description: Skip all shutdown routines (Do not process the BeforeHostTerminate
                event).
              type: boolean
          required:
          - force
        type: object
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/farm-roles/:
    get:
      description: Describes all Farm Roles.
      responses:
        200:
          description: A list of FarmRole objects.
          schema:
            $ref: '#/definitions/FarmRoleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Creates a new Farm Role.
      parameters:
      - description: The JSON representation of a FarmRole object.
        in: body
        name: farmRoleObject
        required: true
        schema:
          $ref: '#/definitions/FarmRole'
      responses:
        201:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/global-variables/:
    get:
      description: Describes all Global Variables associated with the Farm.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Declares a new Global Variable for the Farm.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/global-variables/{globalVariableName}/:
    delete:
      description: Deletes a Global Variable from this Farm's scope.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves a Global Variable's value in this Farm's scope
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Updates a Global Variable's value in this Farm's scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/servers/:
    get:
      description: Describes all Servers which correspond to the Farm.
      responses:
        200:
          description: A list of ServerSummary objects.
          schema:
            $ref: '#/definitions/ServerSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
  /{envId}/images/:
    get:
      description: Describes all Images available in the Environment.
      responses:
        200:
          description: A list of Image objects.
          schema:
            $ref: '#/definitions/ImageListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Register a new Image in the Environment.
      parameters:
      - description: The JSON representation of a Image object.
        in: body
        name: imageObject
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        201:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/{imageId}/:
    delete:
      description: Deregisters an Image from the Environment.
      parameters:
      - description: Attempt to delete this Image from the Cloud.
        in: query
        name: deleteFromCloud
        required: false
        type: boolean
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        202:
          description: Image scheduled for deregistration and deletion from cloud.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves an Image.
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    patch:
      description: Changes Image attributes. Only the name be can changed.
      parameters:
      - description: The updated definition.
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/{imageId}/actions/copy/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Copies an image from one EC2 region to another.
      parameters:
      - description: The EC2 region to copy this Image to.
        in: body
        name: copyTo
        required: true
        schema:
          $ref: '#/definitions/CloudLocation'
      responses:
        202:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/os/:
    get:
      description: Describes a list of Operating Systems available in the Environment.
      responses:
        200:
          description: A list of Os objects.
          schema:
            $ref: '#/definitions/OsListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/os/{osId}/:
    get:
      description: Describes detailed info about specified OS.
      responses:
        200:
          description: The JSON representation of a Os object.
          schema:
            $ref: '#/definitions/OsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Os object.
      in: path
      name: osId
      pattern: '[A-Za-z0-9-]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Os'
  /{envId}/projects/:
    get:
      description: List Projects available in this Environment.
      responses:
        200:
          description: A list of Project objects.
          schema:
            $ref: '#/definitions/ProjectListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Creates a new Project in this Environment.
      parameters:
      - description: The JSON representation of a Project object.
        in: body
        name: projectObject
        required: true
        schema:
          $ref: '#/definitions/Project'
      responses:
        201:
          description: The JSON representation of a Project object.
          schema:
            $ref: '#/definitions/ProjectDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/projects/{projectId}/:
    get:
      description: Return a JSON representation of a Project.
      responses:
        200:
          description: The JSON representation of a Project object.
          schema:
            $ref: '#/definitions/ProjectDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Project object.
      in: path
      maxLength: 36
      minLength: 36
      name: projectId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Project'
  /{envId}/role-categories/:
    get:
      description: Describes Role Categories available in the Environment.
      responses:
        200:
          description: A list of RoleCategory objects.
          schema:
            $ref: '#/definitions/RoleCategoryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Creates a new Role Category in the Environment.
      parameters:
      - description: The JSON representation of a RoleCategory object.
        in: body
        name: roleCategoryObject
        required: true
        schema:
          $ref: '#/definitions/RoleCategory'
      responses:
        201:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/role-categories/{roleCategoryId}/:
    delete:
      description: Deletes the Role Category from the Environment.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about a specified Role Category.
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a RoleCategory object.
      in: path
      name: roleCategoryId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/RoleCategory'
    patch:
      description: Modifies the attributes of the specified Role Category.
      parameters:
      - description: The JSON representation of a RoleCategory object.
        in: body
        name: roleCategoryObject
        required: true
        schema:
          $ref: '#/definitions/RoleCategory'
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/:
    get:
      description: Describes all Roles available in the Environment.
      responses:
        200:
          description: A list of Role objects.
          schema:
            $ref: '#/definitions/RoleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Creates a new Role in the Environment.
      parameters:
      - description: The JSON representation of a Role object.
        in: body
        name: roleObject
        required: true
        schema:
          $ref: '#/definitions/Role'
      responses:
        201:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/:
    delete:
      description: Deletes specified Role from the Environment.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about a specified Role.
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    patch:
      description: Modifies Role attributes.
      parameters:
      - description: The JSON representation of a Role object.
        in: body
        name: roleObject
        required: true
        schema:
          $ref: '#/definitions/Role'
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/global-variables/:
    get:
      description: Describes all Global Variables associated with the Role.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Declares a new Global Variable for the Role.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/global-variables/{globalVariableName}/:
    delete:
      description: Deletes a Global Variable from this Role's scope.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves a Global Variable's value in the Role's scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Updates a Global Variable's value in the Role's scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/images/:
    get:
      description: Describes all Images associated with the specified Role.
      responses:
        200:
          description: A list of RoleImage objects.
          schema:
            $ref: '#/definitions/RoleImageListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Associates a new Image with this Role. This may fail if an existing
        Image conflicts with the Image you are trying to add (i.e. they are in the
        same location).
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        201:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/images/{imageId}/:
    delete:
      description: Dis-associates the Image from the Role.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Redirects to the Image.
      responses:
        200:
          description: Redirects to the Image.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
  /{envId}/roles/{roleId}/images/{imageId}/actions/replace/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Replaces an Image in-place. This allows you to replace an Image
        without having to dis-associate it and then associate a new one, which may
        not be possible if a Farm Role is currently using this Image.
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        200:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/orchestration-rules/:
    get:
      description: Describes Orchestration Rules associated with the Role, including
        Rules from other Scopes (those are read-only).
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Associates a new Orchestration Rule with the Role.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Deletes the specified Orchestration Rule associated with the Role.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves the specified Orchestration Rule associated with the
        Role.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a OrchestrationRule object.
      in: path
      name: orchestrationRuleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Updates the specified Orchestration Rule.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scaling-metrics/:
    get:
      description: Describes all Scaling metrics available in the Environment.
      responses:
        200:
          description: A list of ScalingMetric objects.
          schema:
            $ref: '#/definitions/ScalingMetricListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Adds a new custom Scaling metric to the Environment.
      parameters:
      - description: The JSON representation of a ScalingMetric object.
        in: body
        name: scalingMetricObject
        required: true
        schema:
          $ref: '#/definitions/ScalingMetric'
      responses:
        201:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scaling-metrics/{metricName}/:
    delete:
      description: Deletes the specified Scaling metric.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes an information about specified Scaling metric.
      responses:
        200:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The name of the Scaling Metric.
      in: path
      minLength: 5
      name: metricName
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
    patch:
      description: Modifies a Scaling metric attributes.
      parameters:
      - description: The JSON representation of a ScalingMetric object.
        in: body
        name: scalingMetricObject
        required: true
        schema:
          $ref: '#/definitions/ScalingMetric'
      responses:
        200:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/:
    get:
      description: Describes all Scripts available in the Environment.
      responses:
        200:
          description: A list of Script objects.
          schema:
            $ref: '#/definitions/ScriptListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Creates a new Script in this Environment.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        201:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/:
    delete:
      description: Deletes the specified Script from the Environment.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about the Script.
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    patch:
      description: Changes Script attributes.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/script-versions/:
    delete:
      description: Deletes the Script Version from the Script.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes all versions for the specified Script.
      responses:
        200:
          description: A list of ScriptVersion objects.
          schema:
            $ref: '#/definitions/ScriptVersionListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    post:
      description: Creates a new Script Version for the Script.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        201:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/:
    get:
      description: Describes detailed information about a specified Script Version.
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    - description: The version number of the Script Version being accessed.
      in: path
      name: scriptVersionNumber
      required: true
      type: integer
    patch:
      description: Modifies Script Version attributes.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/:
    get:
      description: Describes all Servers from the Environment.
      responses:
        200:
          description: A list of ServerSummary objects.
          schema:
            $ref: '#/definitions/ServerSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/servers/{serverId}/:
    get:
      description: Describes detailed information about the Server.
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The identifier of the Server.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
  /{envId}/servers/{serverId}/actions/reboot/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The identifier of the Server.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
    post:
      description: Reboots a Server.
      parameters:
      - description: Additional options for the Server reboot command.
        in: body
        name: serverRebootOptions
        required: false
        schema:
          properties:
            hard:
              description: Reboot type.  By default it does soft reboot unless this
                option is set to true. Beware that some types of the instances do
                not support soft reboot.
              type: boolean
        type: object
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/actions/resume/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The identifier of the Server.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
    post:
      description: Resumes a Server.
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/actions/suspend/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The identifier of the Server.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
    post:
      description: Suspends a Server.
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/actions/terminate/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The identifier of the Server.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
    post:
      description: Terminates a Server.
      parameters:
      - description: Additional options for the Server termination command.
        in: body
        name: serverTerminationOptions
        required: false
        schema:
          properties:
            force:
              description: It is used to terminate the Server immediately ignoring
                scalr.system.server_terminate_timeout.
              type: boolean
        type: object
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
          - description: Some of the object or action is deprecated.
            name: Deprecated
          - description: The action can't be perfomed due to object's state.
            name: UnacceptableState
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
produces:
- application/json
swagger: '2.0'
x-dry-yaml-definitions:
  architecture:
    enum: *id005
    type: string
  cloudLocationProperties:
    cloudLocation: *id002
    cloudPlatform: *id003
  cloudstackProvider:
    description: Cloud provider that should be specified for CloudStack based clouds.
    enum: *id006
    type: string
  openstackProvider:
    description: Cloud provider that should be specified for OpenStack based clouds.
    enum: *id007
    type: string
  pathParamsPatterns:
    uuid:
      maxLength: 36
      minLength: 36
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
    uuidShort:
      maxLength: 12
      minLength: 12
      pattern: '[A-Fa-f0-9]+'
  scopeProperty:
    enum: *id001
    type: string
