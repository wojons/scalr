basePath: /api/v1beta0/account
definitions:
  AclRole:
    properties:
      baseRole:
        description: Base ACL Role to override.
        enum:
        - no-access
        - full-access
        - read-only
        type: string
      id:
        description: Unique identifier of ACL Role object.
        maxLength: 20
        minLength: 20
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: The name of the ACL Role.
        type: string
    required:
    - name
    x-createOnly:
    - baseRole
    x-filterable:
    - id
    - name
    - baseRole
  AclRoleForeignKey:
    properties:
      id:
        description: Unique identifier of ACL Role object.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/AclRole'
    x-references:
      $ref: '#/definitions/AclRole'
  AclRoleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/AclRole'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/AclRole'
    x-usedIn:
    - /acl-roles/
  Action:
    discriminator: actionType
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
    required:
    - actionType
    x-concreteTypes:
    - $ref: '#/definitions/ChefAction'
    - $ref: '#/definitions/ScriptAction'
    - $ref: '#/definitions/UriAction'
  AllEventsTrigger:
    description: Triggers when any Event fires.
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  ApiErrorResponse:
    description: Common envelope.
    properties:
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-usedIn:
    - /events/{eventId}/
    - /roles/{roleId}/global-variables/
    - /scripts/{scriptId}/script-versions/
    - /teams/{teamId}/
    - /cost-centers/{costCenterId}/
    - /cloud-credentials/
    - /roles/{roleId}/orchestration-rules/
    - /roles/{roleId}/
    - /roles/{roleId}/images/
    - /environments/{envId}/teams/
    - /images/{imageId}/
    - /teams/
    - /scripts/{scriptId}/script-versions/{scriptVersionNumber}/
    - /roles/{roleId}/images/{imageId}/actions/replace/
    - /role-categories/{roleCategoryId}/
    - /cloud-credentials/{cloudCredentialsId}/
    - /cost-centers/
    - /scripts/
    - /orchestration-rules/{orchestrationRuleId}/
    - /role-categories/
    - /acl-roles/
    - /orchestration-rules/
    - /scripts/{scriptId}/
    - /environments/
    - /os/
    - /roles/{roleId}/global-variables/{globalVariableName}/
    - /environments/{envId}/clouds/{cloud}/
    - /environments/{envId}/teams/{teamId}/
    - /images/{imageId}/actions/copy/
    - /environments/{envId}/clouds/
    - /images/
    - /events/
    - /roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /os/{osId}/
    - /roles/{roleId}/images/{imageId}/
    - /environments/{envId}/
    - /roles/
  ApiMessage:
    properties:
      code:
        description: A machine-readable representation of the message.
        type: string
      message:
        description: A human-readable representation of the message.
        type: string
  ApiMetaContainer:
    properties:
      sample:
        description: Actual properties TBD.
        type: string
  ApiPagination:
    properties:
      first:
        readOnly: true
        type: string
      last:
        readOnly: true
        type: string
      next:
        readOnly: true
        type: string
      prev:
        readOnly: true
        type: string
  AwsCloudCredentials:
    properties:
      accessKey:
        description: Acces key ID.
        type: string
      accountId:
        description: AWS Account ID.
        readOnly: true
        type: string
      accountType:
        default: regular
        description: AWS Account type.
        enum:
        - regular
        - govcloud
        - china
        type: string
      billing:
        $ref: '#/definitions/AwsDetailedBilling'
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      secretKey:
        description: The secret key.
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - accountType
    - accessKey
    - secretKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
    - accountType
  AwsDetailedBilling:
    properties:
      bucket:
        description: Billing bucket name.
        type: string
      cloudLocation:
        description: Billing bucket region.
        type: string
      payerAccount:
        description: Payer AWS account number.
        type: string
  AzureCloudCredentials:
    properties:
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      subscription:
        description: The Azure Subscription ID.
        type: string
      tenantName:
        description: The Azure Active Directory name.
        type: string
    required:
    - name
    - cloudCredentialsType
    - tenantName
    - subscription
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  ChefAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
    required:
    - actionType
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  Cloud:
    properties:
      cloud:
        description: Cloud Platform this resources resides in.
        enum: &id001
        - ec2
        - gce
        - azure
        - cloudstack
        - idcf
        - openstack
        - ocs
        - rackspacenguk
        - rackspacengus
        - hpcloud
        - mirantis
        - vio
        - cisco
        type: string
      credentials:
        $ref: '#/definitions/CloudCredentialsForeignKey'
  CloudCredentials:
    discriminator: cloudCredentialsType
    properties:
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    x-concreteTypes:
    - $ref: '#/definitions/AwsCloudCredentials'
    - $ref: '#/definitions/OpenstackCloudCredentials'
    - $ref: '#/definitions/CloudstackCloudCredentials'
    - $ref: '#/definitions/RackspaceCloudCredentials'
    - $ref: '#/definitions/GceCloudCredentials'
    - $ref: '#/definitions/AzureCloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
    x-usedIn:
    - /cloud-credentials/
    - /cloud-credentials/{cloudCredentialsId}/
  CloudCredentialsDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/CloudCredentials'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CloudCredentials'
    x-usedIn:
    - /cloud-credentials/
    - /cloud-credentials/{cloudCredentialsId}/
    - /environments/{envId}/clouds/{cloud}/
  CloudCredentialsForeignKey:
    properties:
      id:
        description: Unique identifier of Cloud Credentials object.
        type: string
    required:
    - id
    x-usedIn:
    - /environments/{envId}/clouds/{cloud}/
  CloudCredentialsSummary:
    properties:
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum: &id002
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    x-createOnly:
    - cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  CloudCredentialsSummaryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CloudCredentialsSummary'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CloudCredentialsSummary'
    x-usedIn:
    - /cloud-credentials/
  CloudListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Cloud'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Cloud'
    x-usedIn:
    - /environments/{envId}/clouds/
  CloudLocation:
    properties:
      cloudLocation: &id003
        description: More precise Cloud Location (within a given Cloud Platform) for
          this resource. May be null if this resource does not have a location (and
          is global to the platform). Note that if you'd like to filter on this property,
          you **must** also filter on `cloudPlatform`.
        type: string
      cloudPlatform: &id004
        description: Cloud Platform this resources resides in.
        enum: *id001
        type: string
    required:
    - cloudPlatform
    x-filterable:
    - cloudPlatform
    - cloudLocation
    x-usedIn:
    - /images/{imageId}/actions/copy/
  CloudstackCloudCredentials:
    properties:
      apiKey:
        description: The API key.
        type: string
      apiUrl:
        description: 'The URL like: http(s)://<cloudstack_ip>:<cloudstack_port>/client/api.'
        type: string
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider that should be specified for CloudStack based
          clouds.
        enum: &id006
        - cloudstack
        - idcf
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      secretKey:
        description: The secret key.
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - provider
    - apiUrl
    - apiKey
    - secretKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  CostCenter:
    properties:
      billingCode:
        readOnly: true
        type: string
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      name:
        type: string
    required:
    - name
    x-filterable:
    - id
    - name
    - billingCode
    x-usedIn:
    - /cost-centers/{costCenterId}/
  CostCenterDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/CostCenter'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-usedIn:
    - /cost-centers/{costCenterId}/
  CostCenterForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-references:
      $ref: '#/definitions/CostCenter'
  CostCenterListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CostCenter'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-usedIn:
    - /cost-centers/
  DeleteSuccessResponse:
    description: Common envelope.
    properties:
      data:
        readOnly: true
        type: string
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-usedIn:
    - /events/{eventId}/
    - /scripts/{scriptId}/script-versions/
    - /teams/{teamId}/
    - /roles/{roleId}/
    - /images/{imageId}/
    - /role-categories/{roleCategoryId}/
    - /cloud-credentials/{cloudCredentialsId}/
    - /orchestration-rules/{orchestrationRuleId}/
    - /scripts/{scriptId}/
    - /roles/{roleId}/global-variables/{globalVariableName}/
    - /environments/{envId}/clouds/{cloud}/
    - /environments/{envId}/teams/{teamId}/
    - /roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /roles/{roleId}/images/{imageId}/
    - /environments/{envId}/
  Environment:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      costCenter:
        $ref: '#/definitions/CostCenterForeignKey'
      id:
        readOnly: true
        type: integer
      name:
        type: string
      status:
        enum:
        - active
        - inactive
        type: string
    required:
    - name
    - costCenter
    x-filterable:
    - id
    - name
    - added
    - status
    - costCenter
    x-usedIn:
    - /environments/
    - /environments/{envId}/
  EnvironmentDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Environment'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Environment'
    x-usedIn:
    - /environments/
    - /environments/{envId}/
  EnvironmentListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Environment'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Environment'
    x-usedIn:
    - /environments/
  EnvironmentTeam:
    properties:
      defaultAclRole:
        $ref: '#/definitions/AclRoleForeignKey'
        description: Default ACL Role which overrides Team's default ACL Role for
          the Environment.  If it's ommited Team's default ACL Role will be applied.  Beware
          that default ACL Role is only applied for Users which get Team membership
          without explicitly defined ACL Role.
        readOnly: true
      team:
        $ref: '#/definitions/TeamForeignKey'
        description: Identifier of the Team.
    required:
    - team
    x-filterable:
    - team
    - defaultAclRole
    x-usedIn:
    - /environments/{envId}/teams/
  EnvironmentTeamDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/EnvironmentTeam'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/EnvironmentTeam'
    x-usedIn:
    - /environments/{envId}/teams/
  EnvironmentTeamListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/EnvironmentTeam'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/EnvironmentTeam'
    x-usedIn:
    - /environments/{envId}/teams/
  Event:
    properties:
      description:
        type: string
      id:
        description: The name of this custom event.
        pattern: '[A-Za-z0-9]+'
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
    required:
    - id
    x-createOnly:
    - id
    x-filterable:
    - id
    - scope
    x-usedIn:
    - /events/{eventId}/
    - /events/
  EventDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Event'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /events/{eventId}/
    - /events/
  EventListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Event'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /events/
  FarmRoleForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
  FarmTarget:
    description: Selects all Servers of the triggering Server's Farm
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  GceCloudCredentials:
    properties:
      accountName:
        description: The service account name.
        type: string
      clientId:
        description: GCE client ID.
        type: string
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      privateKey:
        description: Private key with boundary.
        format: byte
        type: string
      projectId:
        description: GCE project ID.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - projectId
    - clientId
    - accountName
    - privateKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  GlobalVariable:
    properties:
      category:
        description: Category of the variable.
        type: string
      computedCategory:
        description: The category computed by Scalr for this variable.
        readOnly: true
        type: string
      computedValue:
        description: The value computed by Scalr for this variable.
        readOnly: true
        type: string
      declaredIn:
        description: Whether this variable is declared in the current scope.
        enum: *id002
        readOnly: true
        type: string
      description:
        description: A description that explains what this Global Variable is used
          for.
        type: string
      hidden:
        description: Whether this variable is hidden in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: boolean
      locked:
        description: Whether this variable is locked in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: boolean
      name:
        type: string
      outputFormat:
        description: The formatting to apply when formatting this variable. This is
          read-only if `declaredIn` is not the current scope.
        type: string
      requiredIn:
        description: The scope where this variable is required. This is read-only
          if `declaredIn` is not the current scope.
        enum: *id002
        type: string
      validationPattern:
        description: A validation pattern to apply in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: string
      value:
        description: The value declared in the current scope for this variable.  null
          allows inheritance. Any other value overrides inheritance.  This is ignored
          if `declaredIn` is not the current scope.
        type: string
    required:
    - name
    x-createOnly:
    - name
    x-usedIn:
    - /roles/{roleId}/global-variables/
    - /roles/{roleId}/global-variables/{globalVariableName}/
  GlobalVariableDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/GlobalVariable'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /roles/{roleId}/global-variables/
    - /roles/{roleId}/global-variables/{globalVariableName}/
  GlobalVariableListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/GlobalVariable'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /roles/{roleId}/global-variables/
  Image:
    properties:
      added:
        description: Date and time when this Image was created.
        format: date-time
        readOnly: true
        type: string
      architecture:
        enum: &id005
        - i386
        - x86_64
        type: string
      cloudImageId:
        type: string
      cloudInitInstalled:
        description: Install scalarizr via cloud-init at instance launch.
        type: boolean
      cloudLocation: *id003
      cloudPlatform: *id004
      deprecated:
        description: Whether this Image is deprecated.
        readOnly: true
        type: boolean
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      lastUsed:
        description: Date and time when this Image was last used.
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      scalrAgentInstalled:
        description: Scalarizer is installed.
        type: boolean
      scope:
        enum: *id002
        readOnly: true
        type: string
      size:
        readOnly: true
        type: integer
      source:
        description: Indicates how this Image was created.
        enum:
        - Manual
        - BundleTask
        readOnly: true
        type: string
      status:
        description: Current status for this Image. That `failed` means deletion failed.
        enum:
        - active
        - pending_delete
        - failed
        readOnly: true
        type: string
      statusError:
        description: If the Image is in a failed state, this indicates why.
        readOnly: true
        type: string
      type:
        description: (Only used on EC2 currently) Whether this Image is HVM or EBS.
        readOnly: true
        type: string
    required:
    - name
    - cloudPlatform
    - cloudImageId
    - architecture
    - os
    x-createOnly:
    - scalrAgentInstalled
    - cloudInitInstalled
    x-filterable:
    - id
    - name
    - scope
    - cloudPlatform
    - cloudLocation
    - cloudImageId
    - architecture
    - source
    - status
    - deprecated
    - os
    - scalrAgentInstalled
    - cloudInitInstalled
    x-usedIn:
    - /images/{imageId}/
    - /roles/{roleId}/images/{imageId}/actions/replace/
    - /images/{imageId}/actions/copy/
    - /images/
    - /roles/{roleId}/images/{imageId}/
  ImageDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Image'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /images/{imageId}/
    - /images/{imageId}/actions/copy/
    - /images/
    - /roles/{roleId}/images/{imageId}/
  ImageForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Image'
    x-references:
      $ref: '#/definitions/Image'
  ImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Image'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /images/
  NullTarget:
    description: Selects no Server at all.
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  OpenstackCloudCredentials:
    properties:
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      domainName:
        description: Domain name. It must be provided for the Identity API v3.
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      keystoneUrl:
        description: Keystone URL.
        type: string
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      password:
        description: The password for the user.
        type: string
      provider:
        description: Cloud provider that should be specified for OpenStack based clouds.
        enum: &id007
        - openstack
        - ocs
        - hpcloud
        - mirantis
        - vio
        - cisco
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      sslVerification:
        description: Specifies whether it should verify SSL Certificate.
        type: boolean
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      tenantName:
        description: The tenant name.
        type: string
      userName:
        description: The user name.
        type: string
    required:
    - name
    - cloudCredentialsType
    - provider
    - keystoneUrl
    - userName
    - password
    - tenantName
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  OrchestrationRule:
    properties:
      action:
        $ref: '#/definitions/Action'
      blocking:
        description: Should this Orchestration Rule's execution delay the execution
          of further Orchestration Rules and triggering of further Events? Defaults
          to the action's default when null.
        type: boolean
      id:
        readOnly: true
        type: integer
      order:
        description: When should this Orchestration Rule execute relative to other
          Orchestration Rules that use the same triggeringEvent? Default is relative
          to existing Rules.
        type: integer
      runAs:
        descrition: User the Orchestration Rule should execute as. Defaults to root
          / Administrator when null.
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
      target:
        $ref: '#/definitions/Target'
      timeout:
        description: How long should Scalr wait before aborting the execution of this
          Orchestration Rule? Defaults to the action's default when null.
        type: integer
      trigger:
        $ref: '#/definitions/Trigger'
    required:
    - trigger
    - action
    - target
    x-filterable:
    - id
    x-usedIn:
    - /roles/{roleId}/orchestration-rules/
    - /orchestration-rules/{orchestrationRuleId}/
    - /orchestration-rules/
    - /roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  OrchestrationRuleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/OrchestrationRule'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /roles/{roleId}/orchestration-rules/
    - /orchestration-rules/{orchestrationRuleId}/
    - /orchestration-rules/
    - /roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  OrchestrationRuleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/OrchestrationRule'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /roles/{roleId}/orchestration-rules/
    - /orchestration-rules/
  Os:
    properties:
      family:
        enum:
        - oel
        - debian
        - ubuntu
        - rhel
        - redhat
        - centos
        - amazon
        - windows
        type: string
      generation:
        type: string
      id:
        description: An ID uniquely identifying this OS in Scalr.
        pattern: '[A-Za-z0-9-]+'
        type: string
      name:
        description: A human-readable name for this OS.
        type: string
      version:
        type: string
    required:
    - id
    - name
    - family
    - generation
    - version
    x-filterable:
    - id
    - name
    - family
    - generation
    x-usedIn:
    - /os/{osId}/
  OsDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Os'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /os/{osId}/
  OsForeignKey:
    properties:
      id:
        description: An ID uniquely identifying this OS in Scalr.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Os'
    x-references:
      $ref: '#/definitions/Os'
  OsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Os'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /os/
  RackspaceCloudCredentials:
    properties:
      apiKey:
        description: The API access key.
        type: string
      cloudCredentialsType:
        description: Cloud Platform this resources resides in.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier of Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      isUk:
        description: Indicates is Rackspace UK.
        type: boolean
      name:
        description: Unique name of the Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which the Cloud Credentials are added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      userName:
        description: The user name.
        type: string
    required:
    - name
    - cloudCredentialsType
    - userName
    - apiKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - isUk
    x-discriminator: cloudCredentialsType
    x-filterable:
    - name
    - cloud
    - status
    - scope
    - provider
  Role:
    properties:
      builtinAutomation:
        items:
          enum:
          - base
          - chef
          - mysql
          - percona
          - mariadb
          - postgresql
          - mongodb
          - redis
          - apache
          - nginx
          - tomcat
          - haproxy
          - rabbitmq
          - memcached
          type: string
        type: array
      category:
        $ref: '#/definitions/RoleCategoryForeignKey'
      deprecated:
        description: Whether the Role is deprecated.
        type: boolean
      description:
        type: string
      id:
        readOnly: true
        type: integer
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      quickStart:
        description: Whether it is QuickStart Role.
        type: boolean
      scope:
        enum: *id002
        readOnly: true
        type: string
      useScalrAgent:
        description: Using Scalarizr (Scalr agent).
        type: boolean
    required:
    - name
    - category
    - os
    x-createOnly:
    - useScalrAgent
    - builtinAutomation
    x-filterable:
    - id
    - name
    - os
    - category
    - scope
    - quickStart
    - deprecated
    - useScalrAgent
    - builtinAutomation
    x-usedIn:
    - /roles/{roleId}/global-variables/
    - /roles/{roleId}/orchestration-rules/
    - /roles/{roleId}/
    - /roles/{roleId}/images/
    - /roles/{roleId}/images/{imageId}/actions/replace/
    - /roles/{roleId}/global-variables/{globalVariableName}/
    - /roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /roles/{roleId}/images/{imageId}/
    - /roles/
  RoleCategory:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
    required:
    - name
    x-filterable:
    - id
    - name
    - scope
    x-usedIn:
    - /role-categories/{roleCategoryId}/
    - /role-categories/
  RoleCategoryDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/RoleCategory'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /role-categories/{roleCategoryId}/
    - /role-categories/
  RoleCategoryForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-references:
      $ref: '#/definitions/RoleCategory'
  RoleCategoryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleCategory'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /role-categories/
  RoleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Role'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /roles/{roleId}/
    - /roles/
  RoleForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Role'
    x-references:
      $ref: '#/definitions/Role'
  RoleImage:
    description: A Representation of a Role Image. Note that the `role` property is
      optional when POST-ing to a URL that already includes `{roleId}`.
    properties:
      image:
        $ref: '#/definitions/ImageForeignKey'
      role:
        $ref: '#/definitions/RoleForeignKey'
    required:
    - role
    - image
    x-filterable:
    - role
    - image
    x-usedIn:
    - /roles/{roleId}/images/
    - /roles/{roleId}/images/{imageId}/actions/replace/
  RoleImageDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/RoleImage'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /roles/{roleId}/images/
    - /roles/{roleId}/images/{imageId}/actions/replace/
  RoleImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleImage'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /roles/{roleId}/images/
  RoleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Role'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /roles/
  Script:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      blockingDefault:
        type: boolean
      description:
        type: string
      id:
        readOnly: true
        type: integer
      lastChanged:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      osType:
        description: Type of OS this Script should execute on. This will influence
          Orchestration Rules, an will trigger validation on individual ScriptVersion's
          you upload.
        enum:
        - linux
        - windows
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
      timeoutDefault:
        type: integer
    required:
    - name
    - osType
    x-createOnly:
    - osType
    x-filterable:
    - id
    - name
    - osType
    - blockingDefault
    - scope
    x-usedIn:
    - /scripts/{scriptId}/script-versions/
    - /scripts/{scriptId}/script-versions/{scriptVersionNumber}/
    - /scripts/
    - /scripts/{scriptId}/
  ScriptAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
      scriptVersion:
        $ref: '#/definitions/ScriptVersionForeignKey'
        description: ScriptVersion to execute.
    required:
    - actionType
    - scriptVersion
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  ScriptDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Script'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /scripts/
    - /scripts/{scriptId}/
  ScriptForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Script'
    x-references:
      $ref: '#/definitions/Script'
  ScriptListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Script'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /scripts/
  ScriptVersion:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      body:
        description: The contents of this ScriptVersion, those will be validated as
          per the Script's OS Type.
        type: string
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of.
      version:
        description: The Script version number. NULL is interpreted as the Latest
          Version.
        readOnly: true
        type: integer
    required:
    - script
    - body
    x-createOnly:
    - script
    x-filterable:
    - script
    x-usedIn:
    - /scripts/{scriptId}/script-versions/
    - /scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScriptVersion'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /scripts/{scriptId}/script-versions/
    - /scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionForeignKey:
    properties:
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of.
      version:
        description: The Script version number. NULL is interpreted as the Latest
          Version.
        readOnly: true
        type: integer
    required:
    - script
    x-createOnly:
    - script
    x-filterable:
    - script
  ScriptVersionListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ScriptVersion'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /scripts/{scriptId}/script-versions/
  SelectedFarmRolesTarget:
    description: Selects all Servers with specified Roles.
    properties:
      roles:
        items:
          $ref: '#/definitions/FarmRoleForeignKey'
        type: array
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  SpecificEventTrigger:
    description: Triggers when a specific Event fires.
    properties:
      event:
        $ref: '#/definitions/Event'
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    - event
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  Target:
    discriminator: targetType
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-concreteTypes:
    - $ref: '#/definitions/FarmTarget'
    - $ref: '#/definitions/TriggeringFarmRoleTarget'
    - $ref: '#/definitions/SelectedFarmRolesTarget'
    - $ref: '#/definitions/TriggeringServerTarget'
    - $ref: '#/definitions/NullTarget'
  Team:
    properties:
      defaultAclRole:
        $ref: '#/definitions/AclRoleForeignKey'
        description: Default ACL Role for the Team. It is applied only for Users which
          get membership in a Team whithout explicitly defined ACL Role.
      description:
        description: Description of the Team.
        type: string
      id:
        description: Identifier of the Team.
        readOnly: true
        type: integer
      name:
        description: The name of the Team.
        type: string
    required:
    - defaultAclRole
    - name
    x-filterable:
    - id
    - name
    - defaultAclRole
    x-usedIn:
    - /teams/{teamId}/
    - /teams/
    - /environments/{envId}/teams/{teamId}/
  TeamDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Team'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Team'
    x-usedIn:
    - /teams/{teamId}/
    - /teams/
  TeamForeignKey:
    properties:
      id:
        description: Identifier of the Team.
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Team'
    x-references:
      $ref: '#/definitions/Team'
  TeamListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Team'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Team'
    x-usedIn:
    - /teams/
  Trigger:
    discriminator: triggerType
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-concreteTypes:
    - $ref: '#/definitions/SpecificEventTrigger'
    - $ref: '#/definitions/AllEventsTrigger'
  TriggeringFarmRoleTarget:
    description: Selects all Servers of the triggering Server's Farm Role.
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  TriggeringServerTarget:
    description: Selects the Server that triggered the Event.
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  UriAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
      path:
        description: Path or URL to the script to execute.
        type: string
    required:
    - actionType
    - path
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
info:
  description: Manage Roles, Images, Environments and etc.
  title: Scalr Account API
  version: 1.0.0
paths:
  /acl-roles/:
    get:
      description: Describes ACL Roles.
      responses:
        200:
          description: A list of AclRole objects.
          schema:
            $ref: '#/definitions/AclRoleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /cloud-credentials/:
    get:
      description: Describes all Cloud Credentials available in this Account.
      responses:
        200:
          description: A list of CloudCredentialsSummary objects.
          schema:
            $ref: '#/definitions/CloudCredentialsSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Creates a new Cloud Credentials at the Account scope.
      parameters:
      - description: The JSON representation of a CloudCredentials object.
        in: body
        name: cloudCredentialsObject
        required: true
        schema:
          $ref: '#/definitions/CloudCredentials'
      responses:
        201:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /cloud-credentials/{cloudCredentialsId}/:
    delete:
      description: Deletes the specified Cloud Credentials.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Gets detailed information about specified Cloud Credentials. You
        can only obtain information about Cloud Credentials from current scope.
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a CloudCredentials object.
      in: path
      maxLength: 12
      minLength: 12
      name: cloudCredentialsId
      pattern: '[A-Fa-f0-9]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/CloudCredentials'
    patch:
      description: Modifies Cloud Credentials attributes.
      parameters:
      - description: The JSON representation of a CloudCredentials object.
        in: body
        name: cloudCredentialsObject
        required: true
        schema:
          $ref: '#/definitions/CloudCredentials'
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /cost-centers/:
    get:
      description: Describes Cost Centers available in the Account.
      responses:
        200:
          description: A list of CostCenter objects.
          schema:
            $ref: '#/definitions/CostCenterListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /cost-centers/{costCenterId}/:
    get:
      description: Describes detailed information about a specified Cost Center.
      responses:
        200:
          description: The JSON representation of a CostCenter object.
          schema:
            $ref: '#/definitions/CostCenterDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a CostCenter object.
      in: path
      maxLength: 36
      minLength: 36
      name: costCenterId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/CostCenter'
  /environments/:
    get:
      description: List Environments available in this Account.
      responses:
        200:
          description: A list of Environment objects.
          schema:
            $ref: '#/definitions/EnvironmentListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Create a new Environment in the Account.
      parameters:
      - description: The JSON representation of a Environment object.
        in: body
        name: environmentObject
        required: true
        schema:
          $ref: '#/definitions/Environment'
      responses:
        201:
          description: The JSON representation of a Environment object.
          schema:
            $ref: '#/definitions/EnvironmentDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /environments/{envId}/:
    delete:
      description: Delete specified Environment from Account.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retreive an Environment.
      responses:
        200:
          description: The JSON representation of a Environment object.
          schema:
            $ref: '#/definitions/EnvironmentDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
    patch:
      description: Change Environment attributes.
      parameters:
      - description: The JSON representation of a Environment object.
        in: body
        name: environmentObject
        required: true
        schema:
          $ref: '#/definitions/Environment'
      responses:
        200:
          description: The JSON representation of a Environment object.
          schema:
            $ref: '#/definitions/EnvironmentDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /environments/{envId}/clouds/:
    get:
      description: List configured clouds.
      responses:
        200:
          description: A list of Cloud objects.
          schema:
            $ref: '#/definitions/CloudListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
  /environments/{envId}/clouds/{cloud}/:
    delete:
      description: Detaches Cloud Credentials from the Environment.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retreive a Cloud Credentials for configured cloud.
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
    - description: The name of the cloud.
      in: path
      name: cloud
      pattern: \w+
      required: true
      type: string
    post:
      description: Associate/replace a Cloud Credentials for specified cloud.
      parameters:
      - description: The JSON representation of a CloudCredentialsForeignKey object.
        in: body
        name: cloudCredentialsForeignKeyObject
        required: true
        schema:
          $ref: '#/definitions/CloudCredentialsForeignKey'
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /environments/{envId}/teams/:
    get:
      description: List of Teams that have access to this Environment.
      responses:
        200:
          description: A list of EnvironmentTeam objects.
          schema:
            $ref: '#/definitions/EnvironmentTeamListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Allows the Team access to the Environment.
      parameters:
      - description: The JSON representation of a EnvironmentTeam object.
        in: body
        name: environmentTeamObject
        required: true
        schema:
          $ref: '#/definitions/EnvironmentTeam'
      responses:
        201:
          description: The JSON representation of a EnvironmentTeam object.
          schema:
            $ref: '#/definitions/EnvironmentTeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /environments/{envId}/teams/{teamId}/:
    delete:
      description: Deny access of the Team to the Environment.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Team object.
      in: path
      name: teamId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Team'
  /events/:
    get:
      description: Describes all Events available in the Account.
      responses:
        200:
          description: A list of Event objects.
          schema:
            $ref: '#/definitions/EventListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Creates a new Custom Event in the Account.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      - description: Forces the replacement of the Events declared at lower scopes.
        in: query
        name: replace
        required: false
        type: boolean
      responses:
        201:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /events/{eventId}/:
    delete:
      description: Deletes the Event from the Account.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about an Event.
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Event object.
      in: path
      name: eventId
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Event'
    patch:
      description: Modifies Event attributes.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /images/:
    get:
      description: Describes all Images available in the Account.
      responses:
        200:
          description: A list of Image objects.
          schema:
            $ref: '#/definitions/ImageListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Register a new Image in the Account.
      parameters:
      - description: The JSON representation of a Image object.
        in: body
        name: imageObject
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        201:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /images/{imageId}/:
    delete:
      description: Deregisters an Image from the Account.
      parameters:
      - description: Attempt to delete this Image from the Cloud.
        in: query
        name: deleteFromCloud
        required: false
        type: boolean
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        202:
          description: Image scheduled for deregistration and deletion from cloud.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves an Image.
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    patch:
      description: Changes Image attributes. Only the name be can changed.
      parameters:
      - description: The updated definition.
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /images/{imageId}/actions/copy/:
    parameters:
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Copies an image from one EC2 region to another.
      parameters:
      - description: The EC2 region to copy this Image to.
        in: body
        name: copyTo
        required: true
        schema:
          $ref: '#/definitions/CloudLocation'
      responses:
        202:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /orchestration-rules/:
    get:
      description: List Orchestration Rules in this Account.
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Create a new Orchestration Rule for this Account.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Delete an Orchestration Rule from this Account.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve an Orchestration Rule.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a OrchestrationRule object.
      in: path
      name: orchestrationRuleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Update an Orchestration rule.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /os/:
    get:
      description: Describes a list of Operating Systems available in the Account.
      responses:
        200:
          description: A list of Os objects.
          schema:
            $ref: '#/definitions/OsListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /os/{osId}/:
    get:
      description: Describes detailed info about specified OS.
      responses:
        200:
          description: The JSON representation of a Os object.
          schema:
            $ref: '#/definitions/OsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Os object.
      in: path
      name: osId
      pattern: '[A-Za-z0-9-]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Os'
  /role-categories/:
    get:
      description: Describes Role Categories available in the Account.
      responses:
        200:
          description: A list of RoleCategory objects.
          schema:
            $ref: '#/definitions/RoleCategoryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Creates a new Role Category in the Account.
      parameters:
      - description: The JSON representation of a RoleCategory object.
        in: body
        name: roleCategoryObject
        required: true
        schema:
          $ref: '#/definitions/RoleCategory'
      responses:
        201:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /role-categories/{roleCategoryId}/:
    delete:
      description: Deletes the Role Category from the Account.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about a specified Role Category.
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a RoleCategory object.
      in: path
      name: roleCategoryId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/RoleCategory'
    patch:
      description: Modifies the attributes of the specified Role Category.
      parameters:
      - description: The JSON representation of a RoleCategory object.
        in: body
        name: roleCategoryObject
        required: true
        schema:
          $ref: '#/definitions/RoleCategory'
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /roles/:
    get:
      description: Describes all Roles available in the Account.
      responses:
        200:
          description: A list of Role objects.
          schema:
            $ref: '#/definitions/RoleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Creates a new Role in the Account.
      parameters:
      - description: The JSON representation of a Role object.
        in: body
        name: roleObject
        required: true
        schema:
          $ref: '#/definitions/Role'
      responses:
        201:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /roles/{roleId}/:
    delete:
      description: Deletes specified Role from the Account.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about a specified Role.
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    patch:
      description: Modifies Role attributes.
      parameters:
      - description: The JSON representation of a Role object.
        in: body
        name: roleObject
        required: true
        schema:
          $ref: '#/definitions/Role'
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /roles/{roleId}/global-variables/:
    get:
      description: Describes all Global Variables associated with the Role.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Declares a new Global Variable for the Role.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /roles/{roleId}/global-variables/{globalVariableName}/:
    delete:
      description: Deletes a Global Variable from this Role's scope.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves a Global Variable's value in the Role's scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Updates a Global Variable's value in the Role's scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /roles/{roleId}/images/:
    get:
      description: Describes all Images associated with the specified Role.
      responses:
        200:
          description: A list of RoleImage objects.
          schema:
            $ref: '#/definitions/RoleImageListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Associates a new Image with this Role. This may fail if an existing
        Image conflicts with the Image you are trying to add (i.e. they are in the
        same location).
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        201:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /roles/{roleId}/images/{imageId}/:
    delete:
      description: Dis-associates the Image from the Role.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Redirects to the Image.
      responses:
        200:
          description: Redirects to the Image.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
  /roles/{roleId}/images/{imageId}/actions/replace/:
    parameters:
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Replaces an Image in-place. This allows you to replace an Image
        without having to dis-associate it and then associate a new one, which may
        not be possible if a Farm Role is currently using this Image.
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        200:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /roles/{roleId}/orchestration-rules/:
    get:
      description: Describes Orchestration Rules associated with the Role, including
        Rules from other Scopes (those are read-only).
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Associates a new Orchestration Rule with the Role.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /roles/{roleId}/orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Deletes the specified Orchestration Rule associated with the Role.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieves the specified Orchestration Rule associated with the
        Role.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a OrchestrationRule object.
      in: path
      name: orchestrationRuleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Updates the specified Orchestration Rule.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /scripts/:
    get:
      description: Describes all Scripts available in the Account.
      responses:
        200:
          description: A list of Script objects.
          schema:
            $ref: '#/definitions/ScriptListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Creates a new Script in the Account.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        201:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /scripts/{scriptId}/:
    delete:
      description: Deletes the specified Script from the Account.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about the Script.
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    patch:
      description: Changes Script attributes.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /scripts/{scriptId}/script-versions/:
    delete:
      description: Deletes the Script Version from the Script.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes all versions for the specified Script.
      responses:
        200:
          description: A list of ScriptVersion objects.
          schema:
            $ref: '#/definitions/ScriptVersionListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    post:
      description: Creates a new Script Version for the Script.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        201:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /scripts/{scriptId}/script-versions/{scriptVersionNumber}/:
    get:
      description: Describes detailed information about a specified Script Version.
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    - description: The version number of the Script Version being accessed.
      in: path
      name: scriptVersionNumber
      required: true
      type: integer
    patch:
      description: Modifies Script Version attributes.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /teams/:
    get:
      description: Describes the Account Teams.
      responses:
        200:
          description: A list of Team objects.
          schema:
            $ref: '#/definitions/TeamListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Creates a new Team in the Account.
      parameters:
      - description: The JSON representation of a Team object.
        in: body
        name: teamObject
        required: true
        schema:
          $ref: '#/definitions/Team'
      responses:
        201:
          description: The JSON representation of a Team object.
          schema:
            $ref: '#/definitions/TeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /teams/{teamId}/:
    delete:
      description: Deletes the Team from the Account.
      responses:
        200:
          description: Successful deletion.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Describes detailed information about a specified Team.
      responses:
        200:
          description: The JSON representation of a Team object.
          schema:
            $ref: '#/definitions/TeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Team object.
      in: path
      name: teamId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Team'
    patch:
      description: Modifies the attributes of the specified Team.
      parameters:
      - description: The JSON representation of a Team object.
        in: body
        name: teamObject
        required: true
        schema:
          $ref: '#/definitions/Team'
      responses:
        200:
          description: The JSON representation of a Team object.
          schema:
            $ref: '#/definitions/TeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed is locked for changing.
            name: Locked
          - description: Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating system mismatch.
            name: OperatingSystemMismatch
          - description: Some of the configuration settings cannot be applied, conflicts
              or wrong.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: Error is raised when the feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
produces:
- application/json
swagger: '2.0'
x-dry-yaml-definitions:
  architecture:
    enum: *id005
    type: string
  cloudLocationProperties:
    cloudLocation: *id003
    cloudPlatform: *id004
  cloudstackProvider:
    description: Cloud provider that should be specified for CloudStack based clouds.
    enum: *id006
    type: string
  openstackProvider:
    description: Cloud provider that should be specified for OpenStack based clouds.
    enum: *id007
    type: string
  pathParamsPatterns:
    uuid:
      maxLength: 36
      minLength: 36
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
    uuidShort:
      maxLength: 12
      minLength: 12
      pattern: '[A-Fa-f0-9]+'
  scopeProperty:
    enum: *id002
    type: string
